{"ast":null,"code":"var _s = $RefreshSig$();\n// ProtectedRoute.tsx\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // import your AuthContext\n\nexport const ProtectedRoute = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    isLoggedIn\n  } = useContext(AuthContext); // use the useContext hook to get the isLoggedIn value\n};\n_s(ProtectedRoute, \"k0eKnAnvTWhpQrZ9lRleN6NVN6Y=\");\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useContext","AuthContext","ProtectedRoute","_ref","_s","children","isLoggedIn","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/ProtectedRoute.tsx"],"sourcesContent":["// ProtectedRoute.tsx\nimport React, { useContext } from 'react';\nimport { Route, Navigate, RouteProps } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext'; // import your AuthContext\n\ninterface ProtectedRouteProps extends RouteProps {\n    authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n    const { isLoggedIn } = useContext(AuthContext); // use the useContext hook to get the isLoggedIn value\n\n    \n};"],"mappings":";AAAA;AACA,SAAgBA,UAAU,QAAQ,OAAO;AAEzC,SAASC,WAAW,QAAQ,wBAAwB,CAAC,CAAC;;AAMtD,OAAO,MAAMC,cAA6C,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACtE,MAAM;IAAEG;EAAW,CAAC,GAAGN,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;AAGpD,CAAC;AAACG,EAAA,CAJWF,cAA6C;AAAAK,EAAA,GAA7CL,cAA6C;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}