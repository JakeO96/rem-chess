{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useContext, useCallback } from 'react';\nimport { grid, process_move } from '../utils/game-utils';\nimport { GameContext } from \"../context/GameContext\";\nimport { useDrag, useDrop } from 'react-dnd';\nimport { svgIcons } from '../utils/svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ActiveGame = () => {\n  _s();\n  const {\n    initiatingUser: player1,\n    receivingUser: player2,\n    gameState,\n    setGameState\n  } = useContext(GameContext);\n  console.log('activegame component rendering - gamestate is VVVV');\n  console.log(gameState);\n  const setPiecesOnBoard = useCallback(() => {\n    if (player1 && player2) {\n      const allPieces = player1.alive.concat(player2.alive);\n      const allPositions = allPieces.map(p => p.position);\n      const newGameState = {\n        ...gameState\n      };\n      for (const spot in newGameState) {\n        if (allPositions.includes(spot)) {\n          for (const p of allPieces) {\n            if (p.position === spot) {\n              newGameState[spot][0] = p;\n            }\n          }\n        }\n      }\n      setGameState(newGameState);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player1, player2]);\n  useEffect(() => {\n    setPiecesOnBoard();\n  }, [setPiecesOnBoard]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChessBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ActiveGame, \"nu20yOoV1OW/W2KpruPaWF2ox2s=\");\n_c = ActiveGame;\nconst ChessBoard = () => {\n  _s2();\n  const {\n    gameState\n  } = useContext(GameContext);\n  const chessBoard = [];\n  for (let row_num = 0; row_num < 8; row_num++) {\n    let row = [];\n    for (let col_num = 0; col_num < 8; col_num++) {\n      if (gameState) {\n        let position = grid[col_num][row_num];\n        let squareColor = row_num % 2 === 0 ? col_num % 2 === 0 ? 'bg-black-square' : 'bg-white-square' : col_num % 2 === 0 ? 'bg-white-square' : 'bg-black-square';\n        row.push( /*#__PURE__*/_jsxDEV(Square, {\n          position: position,\n          squareColor: squareColor\n        }, `${row_num}-${col_num}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    chessBoard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen flex items-center justify-center\",\n      children: row\n    }, row_num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board\",\n    children: chessBoard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChessBoard, \"T2MsfJ6MfPSd6LIBzd8drYxXGwg=\");\n_c2 = ChessBoard;\nconst DraggablePiece = _ref => {\n  _s3();\n  let {\n    spot_piece\n  } = _ref;\n  const [{\n    isDragging\n  }, dragRef] = useDrag({\n    type: 'piece',\n    item: {\n      type: 'piece',\n      piece: spot_piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dragRef,\n    children: svgIcons[spot_piece.pieceName]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s3(DraggablePiece, \"PitWq9MEidg2fcoeQ58axdvz0w4=\", false, function () {\n  return [useDrag];\n});\n_c3 = DraggablePiece;\nconst Square = _ref2 => {\n  _s4();\n  let {\n    position,\n    squareColor\n  } = _ref2;\n  const {\n    initiatingUser: player1,\n    receivingUser: player2,\n    gameState,\n    setInitiatingUser,\n    setReceivingUser,\n    setGameState\n  } = useContext(GameContext);\n  const [, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item, monitor) => {\n      console.log('drop firing');\n      console.log('spot piece in drop vvvv');\n      console.log(item);\n      if (item) {\n        const start = item.piece.position;\n        const end = position;\n        let copy_state = {\n          ...gameState\n        };\n        if (player1 && player2) {\n          const moveResult = process_move(start, end, copy_state, player1, player2);\n          console.log(moveResult);\n          if (moveResult.isValid) {\n            setInitiatingUser(moveResult.player1);\n            setReceivingUser(moveResult.player2);\n            setGameState(moveResult.newState);\n          } else {\n            setGameState(moveResult.newState);\n          }\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    className: `w-square h-square flex items-center justify-center ${squareColor}`,\n    children: gameState && gameState[position][0] && /*#__PURE__*/_jsxDEV(DraggablePiece, {\n      spot_piece: gameState[position][0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s4(Square, \"mJ2C7bGpdibD8BLmt6vVFqzGjoo=\", false, function () {\n  return [useDrop];\n});\n_c4 = Square;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ActiveGame\");\n$RefreshReg$(_c2, \"ChessBoard\");\n$RefreshReg$(_c3, \"DraggablePiece\");\n$RefreshReg$(_c4, \"Square\");","map":{"version":3,"names":["React","useEffect","useContext","useCallback","grid","process_move","GameContext","useDrag","useDrop","svgIcons","jsxDEV","_jsxDEV","Fragment","_Fragment","ActiveGame","_s","initiatingUser","player1","receivingUser","player2","gameState","setGameState","console","log","setPiecesOnBoard","allPieces","alive","concat","allPositions","map","p","position","newGameState","spot","includes","children","ChessBoard","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","chessBoard","row_num","row","col_num","squareColor","push","Square","className","_c2","DraggablePiece","_ref","_s3","spot_piece","isDragging","dragRef","type","item","piece","collect","monitor","ref","pieceName","_c3","_ref2","_s4","setInitiatingUser","setReceivingUser","dropRef","accept","drop","start","end","copy_state","moveResult","isValid","newState","_c4","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx"],"sourcesContent":["import React, { useEffect, useContext, useCallback } from 'react';\nimport { Piece, grid, process_move } from '../utils/game-utils'\nimport { GameContext } from \"../context/GameContext\";\nimport { ConnectableElement, useDrag, useDrop } from 'react-dnd';\nimport { svgIcons } from '../utils/svg-icons';\nimport { HTML } from 'react-dnd-html5-backend/dist/NativeTypes';\n\ninterface DraggablePieceProps {\n  spot_piece: Piece | null;\n  squareColor: string;\n}\n\nexport const ActiveGame: React.FC<{}> = () => {\n\n  const { initiatingUser: player1, receivingUser: player2, gameState, setGameState } = useContext(GameContext);\n  console.log('activegame component rendering - gamestate is VVVV');\n  console.log(gameState);\n\n  const setPiecesOnBoard = useCallback(() => {\n    if (player1 && player2) {\n      const allPieces = player1.alive.concat(player2.alive);\n      const allPositions = allPieces.map(p => p.position);\n      const newGameState = {...gameState};\n      for (const spot in newGameState) {\n        if (allPositions.includes(spot)) {\n          for (const p of allPieces) {\n            if (p.position === spot) {\n              newGameState[spot][0] = p;\n            }\n          }\n        }\n      }\n      setGameState(newGameState);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player1, player2]);\n\n  useEffect(() => {\n    setPiecesOnBoard();\n  }, [setPiecesOnBoard]);\n\n  return (\n    <>\n      <ChessBoard />\n    </>\n  );\n};\n\nconst ChessBoard: React.FC<{}> = () => {\n  const { gameState } = useContext(GameContext);\n  const chessBoard = [];\n\n  for (let row_num = 0; row_num < 8; row_num++) {\n    let row = [];\n    for (let col_num = 0; col_num < 8; col_num++) {\n      if (gameState) {\n        let position = grid[col_num][row_num];\n        let squareColor = row_num % 2 === 0 \n        ? col_num % 2 === 0 ? 'bg-black-square' : 'bg-white-square' \n        : col_num % 2 === 0 ? 'bg-white-square' : 'bg-black-square';\n        row.push(\n          <Square key={`${row_num}-${col_num}`} position={position} squareColor={squareColor} />\n        );\n      }\n    }\n    chessBoard.push(<div key={row_num} className=\"w-screen flex items-center justify-center\">{row}</div>);\n  }\n\n  return (\n    <div className=\"chess-board\">\n      {chessBoard}\n    </div>\n  );\n}\n\nconst DraggablePiece: React.FC<DraggablePieceProps> = ({ spot_piece }) => {\n  const [{ isDragging }, dragRef] = useDrag({\n    type: 'piece',\n    item: { type: 'piece', piece: spot_piece },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  })\n\n  return (\n    <div ref={dragRef}>\n      {svgIcons[spot_piece.pieceName]}\n    </div>\n  )\n}\n\nconst Square: React.FC<{ position: string, squareColor: string }> = ({ position, squareColor }) => {\n  const { initiatingUser: player1, receivingUser: player2, gameState, setInitiatingUser, setReceivingUser, setGameState } = useContext(GameContext);\n\n  const [, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item: any, monitor) => {\n      console.log('drop firing')\n      console.log('spot piece in drop vvvv')\n      console.log(item);\n      if (item) {\n        const start = item.piece.position; \n        const end = position;\n        let copy_state = {...gameState};\n        if (player1 && player2) {\n          const moveResult = process_move(start, end, copy_state, player1, player2 )\n          console.log(moveResult)\n          if (moveResult.isValid) {\n            setInitiatingUser(moveResult.player1);\n            setReceivingUser(moveResult.player2);\n            setGameState(moveResult.newState);\n          }\n          else {\n            setGameState(moveResult.newState);\n          }\n        }\n      }\n    },\n  })\n\n  return (\n    <div ref={dropRef} className={`w-square h-square flex items-center justify-center ${squareColor}`}>\n      {gameState && gameState[position][0] && <DraggablePiece spot_piece={gameState[position][0]} />}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}