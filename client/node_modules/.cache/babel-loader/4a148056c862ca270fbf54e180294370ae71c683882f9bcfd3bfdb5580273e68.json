{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginPage = _ref => {\n  _s();\n  let {\n    expressApi\n  } = _ref;\n  const [usernameExists, setUsernameExists] = useState(null);\n  const checkUsername = async () => {\n    expressApi.doesUsernameExist().then(res => res.json()).then(data => {\n      if (data.working) {\n        setUsernameExists(data.working);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkUsername,\n      children: \"Check if Username Exists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), usernameExists !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: usernameExists ? 'Username exists.' : 'Username does not exist.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"LPFqZP+QB0cV000lYdZgY9wlLNE=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_ref","_s","expressApi","usernameExists","setUsernameExists","checkUsername","doesUsernameExist","then","res","json","data","working","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport ExpressAPI from '../api/express-api';\n\n\ninterface LoginPageProps {\n  expressApi: ExpressAPI;\n}\n\nexport const LoginPage: FC<LoginPageProps> = ({ expressApi }) => {\n  const [usernameExists, setUsernameExists] = useState<boolean | null>(null);\n\n  const checkUsername = async () => {\n    expressApi.doesUsernameExist()\n    .then(res => res.json())\n    .then((data) => {\n      if (data.working) {\n        setUsernameExists(data.working);\n      }\n    })\n  };\n\n  return (\n    <div>\n      <button onClick={checkUsername}>\n        Check if Username Exists\n      </button>\n      {usernameExists !== null && (\n        <p>{usernameExists ? 'Username exists.' : 'Username does not exist.'}</p>\n      )}\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,OAAO,MAAMC,SAA6B,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC1D,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAiB,IAAI,CAAC;EAE1E,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCH,UAAU,CAACI,iBAAiB,CAAC,CAAC,CAC7BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,OAAO,EAAE;QAChBP,iBAAiB,CAACM,IAAI,CAACC,OAAO,CAAC;MACjC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQe,OAAO,EAAER,aAAc;MAAAO,QAAA,EAAC;IAEhC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRd,cAAc,KAAK,IAAI,iBACtBL,OAAA;MAAAc,QAAA,EAAIT,cAAc,GAAG,kBAAkB,GAAG;IAA0B;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACzE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvBWF,SAA6B;AAAAmB,EAAA,GAA7BnB,SAA6B;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}