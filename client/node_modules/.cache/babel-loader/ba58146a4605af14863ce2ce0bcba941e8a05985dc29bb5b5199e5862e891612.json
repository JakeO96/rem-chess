{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  username: '',\n  logIn: async () => true || false,\n  logOut: async () => true || false,\n  register: async () => true || false\n});\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children,\n    expressApi\n  } = _ref;\n  const isUserLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n  const [isLoggedIn, setIsLoggedIn] = useState(isUserLoggedIn);\n  const [currentClientUsername, setUsername] = useState('');\n  const logIn = async fields => {\n    try {\n      const res = await expressApi.logUserIn(fields);\n      const data = await res.json();\n      if (data.success) {\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('username', data.username);\n        setUsername(data.username);\n        setIsLoggedIn(true);\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  };\n  const logOut = async () => {\n    try {\n      const res = await expressApi.logUserOut();\n      const data = await res.json();\n      if (data.success) {\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('username');\n        setUsername('');\n        setIsLoggedIn(false);\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  };\n  const register = async fields => {\n    try {\n      const res = await expressApi.createUser(fields);\n      const data = await res.json();\n      console.log(data);\n      if (data.success) {\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      username: currentClientUsername,\n      logIn,\n      logOut,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"FLYNufExrEq8YPre919V+LxpeFw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","AuthContext","isLoggedIn","username","logIn","logOut","register","AuthProvider","_ref","_s","children","expressApi","isUserLoggedIn","localStorage","getItem","setIsLoggedIn","currentClientUsername","setUsername","fields","res","logUserIn","data","json","success","setItem","err","console","error","logUserOut","removeItem","createUser","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useState } from 'react';\nimport ExpressAPI from '../api/express-api';\n\ntype AuthContextType = {\n  isLoggedIn: boolean;\n  username: string;\n  logIn: (fields: { email: string; password: string }) => Promise<boolean | undefined>;\n  logOut: () => Promise<boolean | undefined>;\n  register: (fields: { email: string; username: string; password: string }) => Promise<boolean | undefined>;\n};\n\nexport const AuthContext = createContext<AuthContextType>({\n  isLoggedIn: false,\n  username: '',\n  logIn: async () => true || false,\n  logOut: async () => true || false,\n  register: async () => true || false,\n});\n\ntype AuthProviderProps = {\n  children: React.ReactNode;\n  expressApi: ExpressAPI;\n};\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children, expressApi }) => {\n  const isUserLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(isUserLoggedIn);\n  const [currentClientUsername, setUsername] = useState<string>('')\n\n  const logIn = async (fields: { email: string; password: string }) => {\n    try {\n      const res = await expressApi.logUserIn(fields);\n      const data = await res.json();\n\n      if (data.success) {\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('username', data.username);\n        setUsername(data.username);\n        setIsLoggedIn(true);\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  };\n\n  const logOut = async () => {\n    try {\n      const res = await expressApi.logUserOut();\n      const data = await res.json();\n\n      if (data.success) {\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('username');\n        setUsername('');\n        setIsLoggedIn(false);\n        return true;\n      }\n    } catch (err) {\n      console.error(err)\n      return false;\n    }\n  };\n\n  const register = async (fields: { email: string; username: string; password: string }) => {\n    try {\n      const res = await expressApi.createUser(fields);\n      const data = await res.json();\n\n      console.log(data);\n\n      if (data.success) {\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n      return false;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, username: currentClientUsername, logIn, logOut, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}