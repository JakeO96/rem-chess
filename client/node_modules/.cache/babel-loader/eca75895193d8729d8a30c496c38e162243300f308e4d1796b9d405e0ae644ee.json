{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { GameContext } from \"../context/GameContext\";\nimport { Player, assignBlackPieces, assignWhitePieces } from \"../utils/game-utils\";\nimport { ReadyState } from \"react-use-websocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StartGamePortal = _ref => {\n  _s();\n  let {\n    expressApi\n  } = _ref;\n  const [navigateReady, setNavigateReady] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    username\n  } = useContext(AuthContext);\n  const {\n    gameId,\n    setGameId,\n    setInitiatingUser,\n    setReceivingUser,\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useContext(GameContext);\n  useEffect(() => {\n    expressApi.getLoggedInUsers().then(res => res.json()).then(data => {\n      setUsers(data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setIsLoading(false);\n    });\n  }, [expressApi]);\n  useEffect(() => {\n    function randomlyAssignWhite(player1, player2) {\n      const r = Math.floor(Math.random() * 2);\n      if (r === 0) {\n        player1.color = 'white';\n        player2.color = 'black';\n        assignWhitePieces(player1);\n        assignBlackPieces(player2);\n      } else {\n        player1.color = 'black';\n        player2.color = 'white';\n        assignWhitePieces(player2);\n        assignBlackPieces(player1);\n      }\n      return [player1, player2];\n    }\n    function handleIncomingData(data) {\n      if (data.type === 'game-invite') {\n        const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n        const responseMessage = JSON.stringify({\n          type: 'game-invite-response',\n          accepted,\n          recievingUser: data.initiatingUser,\n          initiatingUser: data.recievingUser\n        });\n        sendMessage(responseMessage);\n      } else if (data.type === 'create-game') {\n        expressApi.createGame(data, gameId => {\n          const responseMessage = JSON.stringify({\n            type: 'game-created',\n            recievingUser: data.initiatingUser,\n            initiatingUser: data.recievingUser,\n            gameId: gameId\n          });\n          sendMessage(responseMessage);\n        });\n      } else if (data.type === 'start-game') {\n        let player1 = new Player(data.initiatingUser, '', [], []);\n        let player2 = new Player(data.recievingUser, '', [], []);\n        let [player1WithPieces, player2WithPieces] = randomlyAssignWhite(player1, player2);\n        if (data.gameId) {\n          setGameId(data.gameId);\n        }\n        setInitiatingUser(player1WithPieces);\n        setReceivingUser(player2WithPieces);\n        setNavigateReady(true);\n      } else if (data.type === 'game-decline') {\n        alert(`${data.initiatingUser} declined to start a game.`);\n      }\n    }\n    if (lastMessage !== null) {\n      if (lastMessage.data instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            const data = JSON.parse(reader.result);\n            handleIncomingData(data);\n          }\n        };\n        reader.readAsText(lastMessage.data);\n      } else {\n        const data = JSON.parse(lastMessage.data);\n        handleIncomingData(data);\n      }\n    }\n  }, [lastMessage, expressApi, sendMessage, setGameId, setInitiatingUser, setReceivingUser]);\n  const handleUsernameClick = useCallback(evt => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({\n      type: 'game-invite',\n      recievingUser: player2,\n      initiatingUser: username\n    });\n    sendMessage(message);\n  }, [sendMessage, username]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: navigateReady ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/game/${gameId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((username, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: readyState !== ReadyState.OPEN,\n          \"data-username\": username,\n          onClick: handleUsernameClick,\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users are currently logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(StartGamePortal, \"NKB+2cadoy4t7619FloYrMD38tc=\");\n_c = StartGamePortal;\nvar _c;\n$RefreshReg$(_c, \"StartGamePortal\");","map":{"version":3,"names":["useCallback","useContext","useEffect","useState","Navigate","AuthContext","GameContext","Player","assignBlackPieces","assignWhitePieces","ReadyState","jsxDEV","_jsxDEV","Fragment","_Fragment","StartGamePortal","_ref","_s","expressApi","navigateReady","setNavigateReady","users","setUsers","isLoading","setIsLoading","username","gameId","setGameId","setInitiatingUser","setReceivingUser","sendMessage","lastMessage","readyState","getLoggedInUsers","then","res","json","data","catch","err","console","error","randomlyAssignWhite","player1","player2","r","Math","floor","random","color","handleIncomingData","type","accepted","window","confirm","inviterUsername","responseMessage","JSON","stringify","recievingUser","initiatingUser","createGame","player1WithPieces","player2WithPieces","alert","Blob","reader","FileReader","onload","result","parse","readAsText","handleUsernameClick","evt","currentTarget","dataset","message","children","to","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","disabled","OPEN","onClick","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx"],"sourcesContent":["import { FC, useCallback, useContext, useEffect, useState } from \"react\"\nimport ExpressAPI from \"../api/express-api\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { GameContext, StartGameMessageObject } from \"../context/GameContext\";\nimport { Player, assignBlackPieces, assignWhitePieces, grid } from \"../utils/game-utils\";\nimport { ReadyState } from \"react-use-websocket\";\n\ninterface StartGamePortalProps {\n  expressApi: ExpressAPI;\n}\n\nexport const StartGamePortal: FC<StartGamePortalProps> = ({ expressApi }) => {\n\n  const [navigateReady, setNavigateReady] = useState<boolean>(false);\n  const [users, setUsers] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { username } = useContext(AuthContext)\n  const { gameId, setGameId, setInitiatingUser, setReceivingUser,sendMessage, lastMessage, readyState } = useContext(GameContext)\n\n  useEffect(() => {\n    expressApi.getLoggedInUsers()\n      .then((res) =>  res.json() )\n      .then((data) => {\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [expressApi]);\n\n  useEffect(() => {\n    \n    function randomlyAssignWhite(player1: Player, player2: Player): Player[] {\n      const r = Math.floor(Math.random() * 2);\n      if (r === 0) {\n        player1.color = 'white';\n        player2.color = 'black';\n        assignWhitePieces(player1);\n        assignBlackPieces(player2);\n      } else {\n        player1.color = 'black';\n        player2.color = 'white';\n        assignWhitePieces(player2);\n        assignBlackPieces(player1);\n      }\n      return [player1, player2];\n    }\n\n    function handleIncomingData(data: StartGameMessageObject) {\n      if (data.type === 'game-invite') {\n        const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n        const responseMessage = JSON.stringify({ type: 'game-invite-response', accepted, recievingUser: data.initiatingUser, initiatingUser: data.recievingUser });\n        sendMessage(responseMessage);\n      } else if (data.type === 'create-game') {\n        expressApi.createGame(data, ((gameId) => {\n          const responseMessage = JSON.stringify({ type: 'game-created', recievingUser: data.initiatingUser, initiatingUser: data.recievingUser, gameId: gameId})\n          sendMessage(responseMessage);\n        }))\n      } else if (data.type === 'start-game') {\n        let player1 = new Player(data.initiatingUser, '', [], []);\n        let player2 = new Player(data.recievingUser, '', [], []);\n        let [player1WithPieces, player2WithPieces] = randomlyAssignWhite(player1, player2);\n        if (data.gameId) {\n          setGameId(data.gameId);\n        }\n        setInitiatingUser(player1WithPieces);\n        setReceivingUser(player2WithPieces);\n        setNavigateReady(true);\n      } else if (data.type === 'game-decline') {\n        alert(`${data.initiatingUser} declined to start a game.`);\n      }\n    }\n\n    if (lastMessage !== null) {\n      if (lastMessage.data instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            const data = JSON.parse(reader.result);\n            handleIncomingData(data);\n          }\n        };\n        reader.readAsText(lastMessage.data);\n      } else {\n        const data = JSON.parse(lastMessage.data);\n        handleIncomingData(data);\n      }\n    }\n  }, [lastMessage, expressApi, sendMessage, setGameId, setInitiatingUser, setReceivingUser]);\n\n  const handleUsernameClick = useCallback((evt: React.MouseEvent<HTMLButtonElement>) => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({ type: 'game-invite', recievingUser: player2, initiatingUser: username });\n    sendMessage(message);\n  }, [sendMessage, username]);\n\n  return (\n    <>\n      {\n      navigateReady ? (\n        <Navigate to={`/game/${gameId}`} />\n      ) :  isLoading ? (\n          <p>Loading...</p>\n        ) : users.length > 0 ? (\n          <ul>\n            {users.map((username, index) => (\n              <li key={index}>\n                <button \n                  disabled={readyState !== ReadyState.OPEN} \n                  data-username={username} \n                  onClick={handleUsernameClick}>\n                  {username}\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No users are currently logged in.</p>\n        )\n      }\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}