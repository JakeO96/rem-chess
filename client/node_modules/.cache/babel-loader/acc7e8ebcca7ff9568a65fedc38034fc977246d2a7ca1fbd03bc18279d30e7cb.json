{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/pages/UserDashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport MainLayout from \"../components/MainLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardPage = _ref => {\n  _s();\n  let {\n    expressApi\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    expressApi.getLoggedInUsers().then(res => {\n      res.json();\n    }).then(data => {\n      console.log(data);\n      setUsers(data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setIsLoading(false);\n    });\n  }, [expressApi]);\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DASHBOARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.username\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users are currently logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"KXpXZobL5EyUkGdAyx9t3BruyJg=\");\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["useEffect","useState","MainLayout","jsxDEV","_jsxDEV","DashboardPage","_ref","_s","expressApi","users","setUsers","isLoading","setIsLoading","getLoggedInUsers","then","res","json","data","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","username","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/pages/UserDashboardPage.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport MainLayout from \"../components/MainLayout\";\nimport ExpressAPI from \"../api/express-api\";\n\ninterface DashboardPageProps {\n  expressApi: ExpressAPI\n}\n\ninterface User {\n  username: string;\n  // Include any other user fields you want to display\n}\n\nexport const DashboardPage: FC<DashboardPageProps> = ({ expressApi }) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    expressApi.getLoggedInUsers()\n      .then((res) => { res.json()})\n      .then((data) => {\n        console.log(data)\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [expressApi]);\n\n  return (\n    <MainLayout>\n      <header>\n        <h1>\n          DASHBOARD\n        </h1>\n      </header>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : users.length > 0 ? (\n        <ul>\n          {users.map((user, index) => (\n            <li key={index}>{user.username}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No users are currently logged in.</p>\n      )}\n    </MainLayout>\n  );\n}"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYlD,OAAO,MAAMC,aAAqC,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAClE,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdQ,UAAU,CAACK,gBAAgB,CAAC,CAAC,CAC1BC,IAAI,CAAEC,GAAG,IAAK;MAAEA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CAC5BF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBP,QAAQ,CAACO,IAAI,CAAC;MACdL,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;MAClBT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA,CAACF,UAAU;IAAAqB,QAAA,gBACTnB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EAAI;MAEJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACRhB,SAAS,gBACRP,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACflB,KAAK,CAACmB,MAAM,GAAG,CAAC,gBAClBxB,OAAA;MAAAmB,QAAA,EACGd,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB3B,OAAA;QAAAmB,QAAA,EAAiBO,IAAI,CAACE;MAAQ,GAArBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELvB,OAAA;MAAAmB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB,CAAC;AAAApB,EAAA,CAtCYF,aAAqC;AAAA4B,EAAA,GAArC5B,aAAqC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}