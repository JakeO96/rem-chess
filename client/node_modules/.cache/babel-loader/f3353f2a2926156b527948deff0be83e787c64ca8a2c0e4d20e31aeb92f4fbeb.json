{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grid = [['A7', 'A6', 'A5', 'A4', 'A3', 'A2', 'A1', 'A0'], ['B7', 'B6', 'B5', 'B4', 'B3', 'B2', 'B1', 'B0'], ['C7', 'C6', 'C5', 'C4', 'C3', 'C2', 'C1', 'C0'], ['D7', 'D6', 'D5', 'D4', 'D3', 'D2', 'D1', 'D0'], ['E7', 'E6', 'E5', 'E4', 'E3', 'E2', 'E1', 'E0'], ['F7', 'F6', 'F5', 'F4', 'F3', 'F2', 'F1', 'F0'], ['G7', 'G6', 'G5', 'G4', 'G3', 'G2', 'G1', 'G0'], ['H7', 'H6', 'H5', 'H4', 'H3', 'H2', 'H1', 'H0']];\nexport const ActiveGame = _ref => {\n  _s();\n  let {\n    player1,\n    player2\n  } = _ref;\n  const [gameState, setGameState] = useState({});\n  useEffect(() => {\n    produceEmptyBoard();\n    randomlyAssignWhite();\n    setPiecesOnBoard();\n  }, []);\n  const produceEmptyBoard = () => {\n    let cCnt = 0;\n    const newGameState = {};\n    for (const col of grid) {\n      for (const cord of col) {\n        newGameState[cord] = [null, cCnt];\n      }\n      cCnt += 1;\n    }\n    setGameState(newGameState);\n  };\n  const randomlyAssignWhite = () => {\n    const r = Math.floor(Math.random() * 2);\n    if (r === 0) {\n      player1.assignWhitePieces(grid);\n      player1.color = 'white';\n      player2.assignBlackPieces(grid);\n      player2.color = 'black';\n    } else {\n      player2.assignWhitePieces(grid);\n      player2.color = 'white';\n      player1.assignBlackPieces(grid);\n      player1.color = 'black';\n    }\n  };\n  const setPiecesOnBoard = () => {\n    const allPieces = player1.alive.concat(player2.alive);\n    const allPositions = allPieces.map(p => p.position);\n    const newGameState = {\n      ...gameState\n    };\n    for (const spot in newGameState) {\n      if (allPositions.includes(spot)) {\n        for (const p of allPieces) {\n          if (p.position === spot) {\n            newGameState[spot][0] = p;\n          }\n        }\n      }\n    }\n    setGameState(newGameState);\n  };\n  const processMove = (start, end) => {\n    // As in the original code...\n    return false;\n  };\n  const renderBoard = () => {\n    // This function should return JSX that represents the board.\n    // This implementation depends on how you want to render the board.\n    // For simplicity, let's assume we're returning an empty div.\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ActiveGame, \"b1N0qf7c+YN/lg5dRubxKOxv8uY=\");\n_c = ActiveGame;\nclass Piece {\n  constructor(name, position, moved) {\n    this.name = name;\n    this.position = position;\n    this.moved = moved;\n  }\n}\nclass Pawn extends Piece {\n  constructor(name, position, moved) {\n    super(name, position, moved);\n  }\n}\nclass Rook extends Piece {\n  constructor(name, position, moved) {\n    super(name, position, moved);\n  }\n}\nclass Knight extends Piece {\n  constructor(name, position, moved) {\n    super(name, position, moved);\n  }\n  validKnightMoves(grid, state, col, row) {\n    const allMoves = [];\n    // ... rest of the function as in the original Python code\n    return allMoves;\n  }\n}\nclass Bishop extends Piece {\n  constructor(name, position, moved) {\n    super(name, position, moved);\n  }\n}\nclass Queen extends Piece {\n  constructor(name, position, moved) {\n    super(name, position, moved);\n  }\n}\nclass King extends Piece {\n  constructor(name, position, moved) {\n    super(name, position, moved);\n  }\n  validKingMoves(grid, state, col, row) {\n    const cords = [[col, row + 1], [col - 1, row + 1], [col + 1, row + 1], [col, row - 1], [col - 1, row - 1], [col + 1, row - 1], [col + 1, row], [col - 1, row]];\n    const allMoves = [];\n    for (const c of cords) {\n      if (c[0] === 8 || c[0] === -1 || c[1] === 8 || c[1] === -1) {\n        continue;\n      } else {\n        var _this$player;\n        const spot = grid[c[0]][c[1]];\n        if (state[spot][0] === null) {\n          allMoves.push(spot);\n        } else if (state[spot][0].player.color === ((_this$player = this.player) === null || _this$player === void 0 ? void 0 : _this$player.color)) {\n          continue;\n        } else {\n          allMoves.push(spot);\n        }\n      }\n    }\n    return allMoves;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"ActiveGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","grid","ActiveGame","_ref","_s","player1","player2","gameState","setGameState","produceEmptyBoard","randomlyAssignWhite","setPiecesOnBoard","cCnt","newGameState","col","cord","r","Math","floor","random","assignWhitePieces","color","assignBlackPieces","allPieces","alive","concat","allPositions","map","p","position","spot","includes","processMove","start","end","renderBoard","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","Piece","constructor","name","moved","Pawn","Rook","Knight","validKnightMoves","state","row","allMoves","Bishop","Queen","King","validKingMoves","cords","c","_this$player","push","player","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx"],"sourcesContent":["import MainLayout from \"./MainLayout\"\nimport React, { useState, useEffect } from 'react';\n\nconst grid: string[][] = [\n    ['A7', 'A6', 'A5', 'A4', 'A3', 'A2', 'A1', 'A0'],\n    ['B7', 'B6', 'B5', 'B4', 'B3', 'B2', 'B1', 'B0'],\n    ['C7', 'C6', 'C5', 'C4', 'C3', 'C2', 'C1', 'C0'],\n    ['D7', 'D6', 'D5', 'D4', 'D3', 'D2', 'D1', 'D0'],\n    ['E7', 'E6', 'E5', 'E4', 'E3', 'E2', 'E1', 'E0'],\n    ['F7', 'F6', 'F5', 'F4', 'F3', 'F2', 'F1', 'F0'],\n    ['G7', 'G6', 'G5', 'G4', 'G3', 'G2', 'G1', 'G0'],\n    ['H7', 'H6', 'H5', 'H4', 'H3', 'H2', 'H1', 'H0']\n];\n\ninterface GameState {\n  [key: string]: [Piece | null, number];\n}\n\ninterface ActiveGameProps {\n  player1: Player;\n  player2: Player;\n}\n\nexport const ActiveGame: React.FC<ActiveGameProps> = ({ player1, player2 }) => {\n  const [gameState, setGameState] = useState<GameState>({});\n\n  useEffect(() => {\n    produceEmptyBoard();\n    randomlyAssignWhite();\n    setPiecesOnBoard();\n  }, []);\n\n  const produceEmptyBoard = () => {\n    let cCnt = 0;\n    const newGameState: GameState = {};\n    for (const col of grid) {\n      for (const cord of col) {\n        newGameState[cord] = [null, cCnt];\n      }\n      cCnt += 1;\n    }\n    setGameState(newGameState);\n  }\n\n  const randomlyAssignWhite = () => {\n    const r = Math.floor(Math.random() * 2);\n    if (r === 0) {\n      player1.assignWhitePieces(grid);\n      player1.color = 'white';\n      player2.assignBlackPieces(grid);\n      player2.color = 'black';\n    } else {\n      player2.assignWhitePieces(grid);\n      player2.color = 'white';\n      player1.assignBlackPieces(grid);\n      player1.color = 'black';\n    }\n  }\n\n  const setPiecesOnBoard = () => {\n    const allPieces = player1.alive.concat(player2.alive);\n    const allPositions = allPieces.map(p => p.position);\n    const newGameState = {...gameState};\n    for (const spot in newGameState) {\n      if (allPositions.includes(spot)) {\n        for (const p of allPieces) {\n          if (p.position === spot) {\n            newGameState[spot][0] = p;\n          }\n        }\n      }\n    }\n    setGameState(newGameState);\n  }\n\n  const processMove = (start: string, end: string): boolean => {\n    // As in the original code...\n    return false;\n  }\n\n  const renderBoard = (): JSX.Element => {\n    // This function should return JSX that represents the board.\n    // This implementation depends on how you want to render the board.\n    // For simplicity, let's assume we're returning an empty div.\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      {renderBoard()}\n    </div>\n  );\n};\n\nabstract class Piece {\n  constructor(\n    public name: string,\n    public position: string,\n    public moved: boolean\n  ) { }\n}\n\nclass Pawn extends Piece {\n  constructor(name: string, position: string, moved: boolean) {\n    super(name, position, moved);\n  }\n}\n\nclass Rook extends Piece {\n  constructor(name: string, position: string, moved: boolean) {\n    super(name, position, moved);\n  }\n}\n\nclass Knight extends Piece {\n  constructor(name: string, position: string, moved: boolean) {\n    super(name, position, moved);\n  }\n\n  validKnightMoves(grid: string[][], state: any, col: number, row: number): string[] {\n    const allMoves: string[] = [];\n    // ... rest of the function as in the original Python code\n    return allMoves;\n  }\n}\n\nclass Bishop extends Piece {\n  constructor(name: string, position: string, moved: boolean) {\n    super(name, position, moved);\n  }\n}\n\nclass Queen extends Piece {\n  constructor(name: string, position: string, moved: boolean) {\n    super(name, position, moved);\n  }\n}\n\nclass King extends Piece {\n  constructor(name: string, position: string, moved: boolean) {\n    super(name, position, moved);\n  }\n\n  validKingMoves(grid: string[][], state: any, col: number, row: number): string[] {\n    const cords = [\n      [col, (row + 1)],\n      [(col - 1), (row + 1)],\n      [(col + 1), (row + 1)],\n      [col, (row - 1)],\n      [(col - 1), (row - 1)],\n      [(col + 1), (row - 1)],\n      [(col + 1), row],\n      [(col - 1), row]\n    ];\n\n    const allMoves: string[] = [];\n    for (const c of cords) {\n      if (c[0] === 8 || c[0] === -1 || c[1] === 8 || c[1] === -1) {\n        continue;\n      } else {\n        const spot = grid[c[0]][c[1]];\n        if (state[spot][0] === null) {\n          allMoves.push(spot);\n        } else if (state[spot][0].player.color === this.player?.color) {\n          continue;\n        } else {\n          allMoves.push(spot);\n        }\n      }\n    }\n\n    return allMoves;\n  }\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAgB,GAAG,CACrB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAChD,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACnD;AAWD,OAAO,MAAMC,UAAqC,GAAGC,IAAA,IAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACxE,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAY,CAAC,CAAC,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACdW,iBAAiB,CAAC,CAAC;IACnBC,mBAAmB,CAAC,CAAC;IACrBC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIG,IAAI,GAAG,CAAC;IACZ,MAAMC,YAAuB,GAAG,CAAC,CAAC;IAClC,KAAK,MAAMC,GAAG,IAAIb,IAAI,EAAE;MACtB,KAAK,MAAMc,IAAI,IAAID,GAAG,EAAE;QACtBD,YAAY,CAACE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAEH,IAAI,CAAC;MACnC;MACAA,IAAI,IAAI,CAAC;IACX;IACAJ,YAAY,CAACK,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMH,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACvC,IAAIH,CAAC,KAAK,CAAC,EAAE;MACXX,OAAO,CAACe,iBAAiB,CAACnB,IAAI,CAAC;MAC/BI,OAAO,CAACgB,KAAK,GAAG,OAAO;MACvBf,OAAO,CAACgB,iBAAiB,CAACrB,IAAI,CAAC;MAC/BK,OAAO,CAACe,KAAK,GAAG,OAAO;IACzB,CAAC,MAAM;MACLf,OAAO,CAACc,iBAAiB,CAACnB,IAAI,CAAC;MAC/BK,OAAO,CAACe,KAAK,GAAG,OAAO;MACvBhB,OAAO,CAACiB,iBAAiB,CAACrB,IAAI,CAAC;MAC/BI,OAAO,CAACgB,KAAK,GAAG,OAAO;IACzB;EACF,CAAC;EAED,MAAMV,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMY,SAAS,GAAGlB,OAAO,CAACmB,KAAK,CAACC,MAAM,CAACnB,OAAO,CAACkB,KAAK,CAAC;IACrD,MAAME,YAAY,GAAGH,SAAS,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;IACnD,MAAMhB,YAAY,GAAG;MAAC,GAAGN;IAAS,CAAC;IACnC,KAAK,MAAMuB,IAAI,IAAIjB,YAAY,EAAE;MAC/B,IAAIa,YAAY,CAACK,QAAQ,CAACD,IAAI,CAAC,EAAE;QAC/B,KAAK,MAAMF,CAAC,IAAIL,SAAS,EAAE;UACzB,IAAIK,CAAC,CAACC,QAAQ,KAAKC,IAAI,EAAE;YACvBjB,YAAY,CAACiB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGF,CAAC;UAC3B;QACF;MACF;IACF;IACApB,YAAY,CAACK,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMmB,WAAW,GAAGA,CAACC,KAAa,EAAEC,GAAW,KAAc;IAC3D;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAmB;IACrC;IACA;IACA;IACA,oBAAOnC,OAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EACpB,CAAC;EAED,oBACEvC,OAAA;IAAAwC,QAAA,EACGL,WAAW,CAAC;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACnC,EAAA,CArEWF,UAAqC;AAAAuC,EAAA,GAArCvC,UAAqC;AAuElD,MAAewC,KAAK,CAAC;EACnBC,WAAWA,CACFC,IAAY,EACZf,QAAgB,EAChBgB,KAAc,EACrB;IAAA,KAHOD,IAAY,GAAZA,IAAY;IAAA,KACZf,QAAgB,GAAhBA,QAAgB;IAAA,KAChBgB,KAAc,GAAdA,KAAc;EACnB;AACN;AAEA,MAAMC,IAAI,SAASJ,KAAK,CAAC;EACvBC,WAAWA,CAACC,IAAY,EAAEf,QAAgB,EAAEgB,KAAc,EAAE;IAC1D,KAAK,CAACD,IAAI,EAAEf,QAAQ,EAAEgB,KAAK,CAAC;EAC9B;AACF;AAEA,MAAME,IAAI,SAASL,KAAK,CAAC;EACvBC,WAAWA,CAACC,IAAY,EAAEf,QAAgB,EAAEgB,KAAc,EAAE;IAC1D,KAAK,CAACD,IAAI,EAAEf,QAAQ,EAAEgB,KAAK,CAAC;EAC9B;AACF;AAEA,MAAMG,MAAM,SAASN,KAAK,CAAC;EACzBC,WAAWA,CAACC,IAAY,EAAEf,QAAgB,EAAEgB,KAAc,EAAE;IAC1D,KAAK,CAACD,IAAI,EAAEf,QAAQ,EAAEgB,KAAK,CAAC;EAC9B;EAEAI,gBAAgBA,CAAChD,IAAgB,EAAEiD,KAAU,EAAEpC,GAAW,EAAEqC,GAAW,EAAY;IACjF,MAAMC,QAAkB,GAAG,EAAE;IAC7B;IACA,OAAOA,QAAQ;EACjB;AACF;AAEA,MAAMC,MAAM,SAASX,KAAK,CAAC;EACzBC,WAAWA,CAACC,IAAY,EAAEf,QAAgB,EAAEgB,KAAc,EAAE;IAC1D,KAAK,CAACD,IAAI,EAAEf,QAAQ,EAAEgB,KAAK,CAAC;EAC9B;AACF;AAEA,MAAMS,KAAK,SAASZ,KAAK,CAAC;EACxBC,WAAWA,CAACC,IAAY,EAAEf,QAAgB,EAAEgB,KAAc,EAAE;IAC1D,KAAK,CAACD,IAAI,EAAEf,QAAQ,EAAEgB,KAAK,CAAC;EAC9B;AACF;AAEA,MAAMU,IAAI,SAASb,KAAK,CAAC;EACvBC,WAAWA,CAACC,IAAY,EAAEf,QAAgB,EAAEgB,KAAc,EAAE;IAC1D,KAAK,CAACD,IAAI,EAAEf,QAAQ,EAAEgB,KAAK,CAAC;EAC9B;EAEAW,cAAcA,CAACvD,IAAgB,EAAEiD,KAAU,EAAEpC,GAAW,EAAEqC,GAAW,EAAY;IAC/E,MAAMM,KAAK,GAAG,CACZ,CAAC3C,GAAG,EAAGqC,GAAG,GAAG,CAAC,CAAE,EAChB,CAAErC,GAAG,GAAG,CAAC,EAAIqC,GAAG,GAAG,CAAC,CAAE,EACtB,CAAErC,GAAG,GAAG,CAAC,EAAIqC,GAAG,GAAG,CAAC,CAAE,EACtB,CAACrC,GAAG,EAAGqC,GAAG,GAAG,CAAC,CAAE,EAChB,CAAErC,GAAG,GAAG,CAAC,EAAIqC,GAAG,GAAG,CAAC,CAAE,EACtB,CAAErC,GAAG,GAAG,CAAC,EAAIqC,GAAG,GAAG,CAAC,CAAE,EACtB,CAAErC,GAAG,GAAG,CAAC,EAAGqC,GAAG,CAAC,EAChB,CAAErC,GAAG,GAAG,CAAC,EAAGqC,GAAG,CAAC,CACjB;IAED,MAAMC,QAAkB,GAAG,EAAE;IAC7B,KAAK,MAAMM,CAAC,IAAID,KAAK,EAAE;MACrB,IAAIC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1D;MACF,CAAC,MAAM;QAAA,IAAAC,YAAA;QACL,MAAM7B,IAAI,GAAG7B,IAAI,CAACyD,CAAC,CAAC,CAAC,CAAC,CAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAIR,KAAK,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;UAC3BsB,QAAQ,CAACQ,IAAI,CAAC9B,IAAI,CAAC;QACrB,CAAC,MAAM,IAAIoB,KAAK,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC+B,MAAM,CAACxC,KAAK,OAAAsC,YAAA,GAAK,IAAI,CAACE,MAAM,cAAAF,YAAA,uBAAXA,YAAA,CAAatC,KAAK,GAAE;UAC7D;QACF,CAAC,MAAM;UACL+B,QAAQ,CAACQ,IAAI,CAAC9B,IAAI,CAAC;QACrB;MACF;IACF;IAEA,OAAOsB,QAAQ;EACjB;AACF;AAAC,IAAAX,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}