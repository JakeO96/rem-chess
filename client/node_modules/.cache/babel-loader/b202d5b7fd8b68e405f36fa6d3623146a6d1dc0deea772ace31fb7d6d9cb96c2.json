{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StartGamePortal = _ref => {\n  _s();\n  let {\n    expressApi\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ws, setWs] = useState(null);\n  const navigate = useNavigate();\n  const {\n    isLoggedIn,\n    username\n  } = useContext(AuthContext);\n  useEffect(() => {\n    expressApi.getLoggedInUsers().then(res => res.json()).then(data => {\n      setUsers(data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setIsLoading(false);\n    });\n  }, [expressApi]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001');\n    setWs(ws);\n\n    // Handle WebSocket events here...\n    if (ws) {\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'game-invite') {\n          const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n          const message = JSON.stringify({\n            type: 'game-invite-response',\n            accepted\n          });\n          ws.send(message);\n        } else if (data.type === 'game-start') {\n          // Replace '/game' with the actual path to your game page\n          // 'data.gameId' should be the id of the game that was created on the server\n          navigate(`/game/${data.gameId}`);\n        }\n      };\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (!isLoggedIn && ws) {\n      ws.close();\n    }\n  }, [isLoggedIn, ws]);\n  const handleUsernameClick = evt => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({\n      type: 'game-invite',\n      invitedUser: player2\n    });\n    if (ws) ws.send(message);\n    const handleGameStart = gameId => {\n      const message = JSON.stringify({\n        type: 'game-start',\n        gameId\n      });\n      if (ws) ws.send(message);\n    };\n    expressApi.createGame({\n      player1: username,\n      player2\n    }, handleGameStart);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((username, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-username\": username,\n          onClick: handleUsernameClick,\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users are currently logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(StartGamePortal, \"KNZgIngqGWVStQdy2Wn5cAqxmek=\", false, function () {\n  return [useNavigate];\n});\n_c = StartGamePortal;\nvar _c;\n$RefreshReg$(_c, \"StartGamePortal\");","map":{"version":3,"names":["useContext","useEffect","useState","useNavigate","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","StartGamePortal","_ref","_s","expressApi","users","setUsers","isLoading","setIsLoading","ws","setWs","navigate","isLoggedIn","username","getLoggedInUsers","then","res","json","data","catch","err","console","error","WebSocket","onmessage","event","JSON","parse","type","accepted","window","confirm","inviterUsername","message","stringify","send","gameId","close","handleUsernameClick","evt","player2","currentTarget","dataset","invitedUser","handleGameStart","createGame","player1","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","onClick","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx"],"sourcesContent":["import { FC, MouseEventHandler, useContext, useEffect, useState } from \"react\"\nimport { useNavigate } from 'react-router-dom'\nimport ExpressAPI from \"../api/express-api\";\nimport { AuthContext } from \"../context/AuthContext\";\n\ninterface StartGamePortalProps {\n  expressApi: ExpressAPI;\n}\n\nexport const StartGamePortal: FC<StartGamePortalProps> = ({ expressApi }) => {\n\n  const [users, setUsers] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [ws, setWs] = useState<WebSocket | null>(null);\n\n  const navigate = useNavigate();\n  const { isLoggedIn, username } = useContext(AuthContext);\n\n  useEffect(() => {\n    expressApi.getLoggedInUsers()\n      .then((res) =>  res.json() )\n      .then((data) => {\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [expressApi]);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:3001');\n    setWs(ws);\n\n    // Handle WebSocket events here...\n    if (ws) {\n      ws.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'game-invite') {\n          const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n          const message = JSON.stringify({ type: 'game-invite-response', accepted });\n          ws.send(message);\n        } else if (data.type === 'game-start') {\n          // Replace '/game' with the actual path to your game page\n          // 'data.gameId' should be the id of the game that was created on the server\n          navigate(`/game/${data.gameId}`);\n        }\n      };\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    if (!isLoggedIn && ws) {\n      ws.close();\n    }\n  }, [isLoggedIn, ws]);\n\n  const handleUsernameClick: MouseEventHandler<HTMLButtonElement> = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({ type: 'game-invite', invitedUser: player2 });\n    if (ws) ws.send(message);\n\n\n    const handleGameStart = (gameId: string) => {\n      const message = JSON.stringify({ type: 'game-start', gameId });\n      if (ws) ws.send(message);\n    };\n    expressApi.createGame({ player1: username, player2 }, handleGameStart);\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : users.length > 0 ? (\n        <ul>\n          {users.map((username, index) => (\n            <li key={index}>\n              <button data-username={username} onClick={handleUsernameClick}>{username}</button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No users are currently logged in.</p>\n      )}\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}