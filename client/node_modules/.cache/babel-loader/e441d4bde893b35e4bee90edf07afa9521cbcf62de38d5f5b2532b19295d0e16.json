{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useContext, useEffect, useState } from \"react\";\n//import { useNavigate } from 'react-router-dom'\n\n//import { AuthContext } from \"../context/AuthContext\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StartGamePortal = _ref => {\n  _s();\n  let {\n    expressApi\n  } = _ref;\n  console.log('StartGamePortal render');\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:3001');\n  const [messageHistory, setMessageHistory] = useState([]);\n  const {\n    username\n  } = useContext(AuthContext);\n  const {\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useWebSocket(socketUrl, {\n    onOpen: () => console.log('opened'),\n    shouldReconnect: closeEvent => true\n  });\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyState];\n  useEffect(() => {\n    expressApi.getLoggedInUsers().then(res => res.json()).then(data => {\n      setUsers(data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setIsLoading(false);\n    });\n  }, [expressApi]);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessageHistory(prev => prev.concat(lastMessage.data));\n      const data = typeof lastMessage.data === 'object' ? JSON.stringify(lastMessage.data) : lastMessage.data;\n      if (data.type === 'game-invite') {\n        const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n        const responseMessage = JSON.stringify({\n          type: 'game-invite-response',\n          accepted,\n          recievingUser: data.initiatingUser,\n          initiatingUser: data.recievingUser\n        });\n        sendMessage(responseMessage);\n      } else if (data.type === 'game-start') {\n        expressApi.createGame(data, gameId => {\n          Cookies.set('activeGameId', gameId);\n          /*#__PURE__*/_jsxDEV(Navigate, {\n            to: `/game/${data.gameId}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this);\n        });\n      } else if (data.type === 'game-decline') {\n        alert(`${data.initiatingUser} declined to start a game.`);\n      }\n    }\n  }, [lastMessage, setMessageHistory, sendMessage, expressApi]);\n  const handleUsernameClick = useCallback(evt => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({\n      type: 'game-invite',\n      recievingUser: player2,\n      initiatingUser: username\n    });\n    sendMessage(message);\n  }, [sendMessage, username]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((username, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: readyState !== ReadyState.OPEN,\n          \"data-username\": username,\n          onClick: handleUsernameClick,\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users are currently logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), \"//\", lastMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Last message: \", typeof lastMessage.data === 'object' ? JSON.stringify(lastMessage.data) : lastMessage.data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messageHistory.map((message, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message ? message : null\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StartGamePortal, \"YDy51mocUAr8ZnHnpz/ftzajDiU=\", false, function () {\n  return [useWebSocket];\n});\n_c = StartGamePortal;\nvar _c;\n$RefreshReg$(_c, \"StartGamePortal\");","map":{"version":3,"names":["useCallback","useContext","useEffect","useState","useWebSocket","ReadyState","Navigate","AuthContext","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","StartGamePortal","_ref","_s","expressApi","console","log","users","setUsers","isLoading","setIsLoading","socketUrl","setSocketUrl","messageHistory","setMessageHistory","username","sendMessage","lastMessage","readyState","onOpen","shouldReconnect","closeEvent","connectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","getLoggedInUsers","then","res","json","data","catch","err","error","prev","concat","JSON","stringify","type","accepted","window","confirm","inviterUsername","responseMessage","recievingUser","initiatingUser","createGame","gameId","set","to","fileName","_jsxFileName","lineNumber","columnNumber","alert","handleUsernameClick","evt","player2","currentTarget","dataset","message","children","length","map","index","disabled","onClick","idx","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx"],"sourcesContent":["import { FC, useCallback, useContext, useEffect, useState } from \"react\"\n//import { useNavigate } from 'react-router-dom'\nimport ExpressAPI from \"../api/express-api\";\n//import { AuthContext } from \"../context/AuthContext\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Cookies from \"js-cookie\";\n\ninterface StartGamePortalProps {\n  expressApi: ExpressAPI;\n}\n\nexport const StartGamePortal: FC<StartGamePortalProps> = ({ expressApi }) => {\n  console.log('StartGamePortal render');\n\n  const [users, setUsers] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:3001');\n  const [messageHistory, setMessageHistory] = useState<string[]>([]);\n  const { username } = useContext(AuthContext)\n  const { \n    sendMessage, \n    lastMessage, \n    readyState \n  } = useWebSocket(socketUrl, { \n    onOpen: () => console.log('opened'), \n    shouldReconnect: (closeEvent) => true,\n  });\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  useEffect(() => {\n    expressApi.getLoggedInUsers()\n      .then((res) =>  res.json() )\n      .then((data) => {\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [expressApi]);\n\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessageHistory((prev) => prev.concat(lastMessage.data));\n      const data = typeof lastMessage.data === 'object' ? JSON.stringify(lastMessage.data) : lastMessage.data\n      if (data.type === 'game-invite') {\n          const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n          const responseMessage = JSON.stringify({ type: 'game-invite-response', accepted, recievingUser: data.initiatingUser, initiatingUser: data.recievingUser });\n          sendMessage(responseMessage);\n      } else if (data.type === 'game-start') {\n        expressApi.createGame(data, ((gameId) => {\n          Cookies.set('activeGameId', gameId);\n          <Navigate to={`/game/${data.gameId}`} />;\n        }))\n      } else if (data.type === 'game-decline') {\n        alert(`${data.initiatingUser} declined to start a game.`);\n      }\n    }\n  }, [lastMessage, setMessageHistory, sendMessage, expressApi]);\n\n  const handleUsernameClick = useCallback((evt: React.MouseEvent<HTMLButtonElement>) => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({ type: 'game-invite', recievingUser: player2, initiatingUser: username });\n    sendMessage(message);\n  }, [sendMessage, username]);\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : users.length > 0 ? (\n        <ul>\n          {users.map((username, index) => (\n            <li key={index}>\n              <button \n                disabled={readyState !== ReadyState.OPEN} \n                data-username={username} \n                onClick={handleUsernameClick}>\n                {username}\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No users are currently logged in.</p>\n      )}\n\n    //{lastMessage ? <span>Last message: {typeof lastMessage.data === 'object' ? JSON.stringify(lastMessage.data) : lastMessage.data}</span> : null}\n      <ul>\n        {messageHistory.map((message, idx) => (\n          <span key={idx}>{message ? message : null}</span>\n        ))}\n      </ul>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}