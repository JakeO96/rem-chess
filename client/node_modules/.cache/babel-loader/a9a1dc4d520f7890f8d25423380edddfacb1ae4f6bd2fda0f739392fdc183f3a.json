{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useContext, useCallback } from 'react';\nimport { grid, process_move } from '../utils/game-utils';\nimport { GameContext } from \"../context/GameContext\";\nimport { useDrag, useDrop } from 'react-dnd';\nimport { svgIcons } from '../utils/svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ActiveGame = () => {\n  _s();\n  const {\n    initiatingUser: player1,\n    receivingUser: player2,\n    gameState,\n    setGameState\n  } = useContext(GameContext);\n  const setPiecesOnBoard = useCallback(() => {\n    if (player1 && player2) {\n      const allPieces = player1.alive.concat(player2.alive);\n      const allPositions = allPieces.map(p => p.position);\n      const newGameState = {\n        ...gameState\n      };\n      for (const spot in newGameState) {\n        if (allPositions.includes(spot)) {\n          for (const p of allPieces) {\n            if (p.position === spot) {\n              newGameState[spot][0] = p;\n            }\n          }\n        }\n      }\n      setGameState(newGameState);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player1, player2]);\n  useEffect(() => {\n    setPiecesOnBoard();\n  }, [setPiecesOnBoard]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChessBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ActiveGame, \"nu20yOoV1OW/W2KpruPaWF2ox2s=\");\n_c = ActiveGame;\nconst ChessBoard = () => {\n  _s2();\n  const {\n    gameState\n  } = useContext(GameContext);\n  const chessBoard = [];\n  for (let row_num = 0; row_num < 8; row_num++) {\n    let row = [];\n    console.log(\"\");\n    for (let col_num = 0; col_num < 8; col_num++) {\n      if (gameState) {\n        let spot_piece = gameState[grid[col_num][row_num]][0];\n        let squareColor = row_num % 2 === 0 ? col_num % 2 === 0 ? 'bg-black-square' : 'bg-white-square' : col_num % 2 === 0 ? 'bg-white-square' : 'bg-black-square';\n        if (spot_piece) {\n          row.push( /*#__PURE__*/_jsxDEV(DraggablePiece, {\n            spot_piece: spot_piece,\n            squareColor: squareColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this));\n        }\n      }\n    }\n    chessBoard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen flex items-center justify-center\",\n      children: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board\",\n    children: chessBoard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChessBoard, \"T2MsfJ6MfPSd6LIBzd8drYxXGwg=\");\n_c2 = ChessBoard;\nconst DraggablePiece = _ref => {\n  _s3();\n  let {\n    spot_piece,\n    squareColor\n  } = _ref;\n  const {\n    initiatingUser: player1,\n    receivingUser: player2,\n    setInitiatingUser,\n    setReceivingUser,\n    gameState,\n    setGameState\n  } = useContext(GameContext);\n  const piece = svgIcons[spot_piece.pieceName];\n  console.log(`draggablepiece being rendered the piece(supposed to be svg) isvvv`);\n  console.log(piece);\n  const [{\n    isDragging\n  }, dragRef] = useDrag({\n    type: 'piece',\n    item: {\n      type: 'piece',\n      piece: spot_piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [{\n    canDrop,\n    isOver\n  }, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item, monitor) => {\n      const start = item.piece.position;\n      const end = spot_piece.position;\n      let copy_state = {\n        ...gameState\n      };\n      if (player1 && player2) {\n        const moveResult = process_move(start, end, copy_state, player1, player2);\n        if (moveResult.isValid) {\n          setInitiatingUser(moveResult.player1);\n          setReceivingUser(moveResult.player2);\n          setGameState(moveResult.newState);\n        } else {\n          setGameState(moveResult.newState);\n        }\n      }\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n\n  // Compose drag and drop refs\n  const combinedRef = node => {\n    dragRef(node);\n    dropRef(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: combinedRef,\n    className: `w-square h-square flex items-center justify-center ${squareColor}`,\n    children: piece\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s3(DraggablePiece, \"2Pdo6gkTA4F9vT0H+gvOBVgnRBE=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c3 = DraggablePiece;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ActiveGame\");\n$RefreshReg$(_c2, \"ChessBoard\");\n$RefreshReg$(_c3, \"DraggablePiece\");","map":{"version":3,"names":["React","useEffect","useContext","useCallback","grid","process_move","GameContext","useDrag","useDrop","svgIcons","jsxDEV","_jsxDEV","Fragment","_Fragment","ActiveGame","_s","initiatingUser","player1","receivingUser","player2","gameState","setGameState","setPiecesOnBoard","allPieces","alive","concat","allPositions","map","p","position","newGameState","spot","includes","children","ChessBoard","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","chessBoard","row_num","row","console","log","col_num","spot_piece","squareColor","push","DraggablePiece","className","_c2","_ref","_s3","setInitiatingUser","setReceivingUser","piece","pieceName","isDragging","dragRef","type","item","collect","monitor","canDrop","isOver","dropRef","accept","drop","start","end","copy_state","moveResult","isValid","newState","combinedRef","node","ref","_c3","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx"],"sourcesContent":["import React, { useEffect, useContext, useCallback } from 'react';\nimport { Piece, grid, process_move } from '../utils/game-utils'\nimport { GameContext } from \"../context/GameContext\";\nimport { ConnectableElement, useDrag, useDrop } from 'react-dnd';\nimport { svgIcons } from '../utils/svg-icons';\n\ninterface DraggablePieceProps {\n  spot_piece: Piece;\n  squareColor: string;\n}\n\nexport const ActiveGame: React.FC<{}> = () => {\n\n  const { initiatingUser: player1, receivingUser: player2, gameState, setGameState } = useContext(GameContext);\n\n  const setPiecesOnBoard = useCallback(() => {\n    if (player1 && player2) {\n      const allPieces = player1.alive.concat(player2.alive);\n      const allPositions = allPieces.map(p => p.position);\n      const newGameState = {...gameState};\n      for (const spot in newGameState) {\n        if (allPositions.includes(spot)) {\n          for (const p of allPieces) {\n            if (p.position === spot) {\n              newGameState[spot][0] = p;\n            }\n          }\n        }\n      }\n      setGameState(newGameState);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player1, player2]);\n\n  useEffect(() => {\n    setPiecesOnBoard();\n  }, [setPiecesOnBoard]);\n\n  return (\n    <>\n      <ChessBoard />\n    </>\n  );\n};\n\nconst ChessBoard: React.FC<{}> = () => {\n  const { gameState } = useContext(GameContext);\n  const chessBoard = [];\n\n  for (let row_num = 0; row_num < 8; row_num++) {\n    let row = [];\n    console.log(\"\")\n    for (let col_num = 0; col_num < 8; col_num++) {\n      if (gameState) {\n        let spot_piece = gameState[grid[col_num][row_num]][0];\n        let squareColor = row_num % 2 === 0 \n        ? col_num % 2 === 0 ? 'bg-black-square' : 'bg-white-square' \n        : col_num % 2 === 0 ? 'bg-white-square' : 'bg-black-square';\n        if (spot_piece){\n          row.push(\n            <DraggablePiece spot_piece={spot_piece} squareColor={squareColor} />\n          );\n        }\n      }\n    }\n    chessBoard.push(<div className=\"w-screen flex items-center justify-center\">{row}</div>);\n  }\n\n  return (\n    <div className=\"chess-board\">\n      {chessBoard}\n    </div>\n  );\n}\n\nconst DraggablePiece: React.FC<DraggablePieceProps> = ({ spot_piece, squareColor }) => {\n\n  const{ initiatingUser: player1, receivingUser: player2, setInitiatingUser, setReceivingUser, gameState, setGameState } = useContext(GameContext);\n  const piece = svgIcons[spot_piece.pieceName];\n  console.log(`draggablepiece being rendered the piece(supposed to be svg) isvvv`)\n  console.log(piece)\n\n  const [{ isDragging }, dragRef] = useDrag({\n    type: 'piece',\n    item: { type: 'piece', piece: spot_piece },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  })\n\n  const [{ canDrop, isOver }, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item: any, monitor) => {\n      const start = item.piece.position; \n      const end = spot_piece.position;\n      let copy_state = {...gameState};\n      if (player1 && player2) {\n        const moveResult = process_move(start, end, copy_state, player1, player2 )\n        if (moveResult.isValid) {\n          setInitiatingUser(moveResult.player1);\n          setReceivingUser(moveResult.player2);\n          setGameState(moveResult.newState);\n        }\n        else {\n          setGameState(moveResult.newState);\n        }\n      }\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n    }),\n  })\n\n  // Compose drag and drop refs\n  const combinedRef = (node: ConnectableElement) => {\n    dragRef(node)\n    dropRef(node)\n  }\n\n  return (\n    <div ref={combinedRef} className={`w-square h-square flex items-center justify-center ${squareColor}`}>\n      {piece}\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}