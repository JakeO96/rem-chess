{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useContext, useCallback } from 'react';\nimport { grid, process_move } from '../utils/game-utils';\nimport { GameContext } from \"../context/GameContext\";\nimport { useDrag, useDrop } from 'react-dnd';\nimport { svgIcons } from '../utils/svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ActiveGame = () => {\n  _s();\n  const {\n    initiatingUser: player1,\n    receivingUser: player2,\n    gameState,\n    setGameState\n  } = useContext(GameContext);\n  console.log(gameState);\n  const setPiecesOnBoard = useCallback(() => {\n    if (player1 && player2) {\n      const allPieces = player1.alive.concat(player2.alive);\n      const allPositions = allPieces.map(p => p.position);\n      const newGameState = {\n        ...gameState\n      };\n      for (const spot in newGameState) {\n        if (allPositions.includes(spot)) {\n          for (const p of allPieces) {\n            if (p.position === spot) {\n              newGameState[spot][0] = p;\n            }\n          }\n        }\n      }\n      console.log(\"newGameState in setPiecesOnBoard VVVVVVVVVVVVVVVV\");\n      console.log(newGameState);\n      setGameState(newGameState);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player1, player2]);\n  useEffect(() => {\n    setPiecesOnBoard();\n  }, [setPiecesOnBoard]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChessBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ActiveGame, \"nu20yOoV1OW/W2KpruPaWF2ox2s=\");\n_c = ActiveGame;\nconst ChessBoard = () => {\n  _s2();\n  const {\n    setInigameState\n  } = useContext(GameContext);\n  const chessBoard = [];\n  const piece = svgIcons[spot_piece.pieceName];\n  console.log(`draggablepiece being rendered the piece(supposed to be svg) isvvv`);\n  console.log(piece);\n  const [{\n    isDragging\n  }, dragRef] = useDrag({\n    type: 'piece',\n    item: {\n      type: 'piece',\n      piece: spot_piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [{\n    canDrop,\n    isOver\n  }, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item, monitor) => {\n      const start = item.piece.position;\n      const end = spot_piece.position;\n      let copy_state = {\n        ...gameState\n      };\n      if (player1 && player2) {\n        const moveResult = process_move(start, end, copy_state, player1, player2);\n        if (moveResult.isValid) {\n          setInitiatingUser(moveResult.player1);\n          setReceivingUser(moveResult.player2);\n          setGameState(moveResult.newState);\n        } else {\n          setGameState(moveResult.newState);\n        }\n      }\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  for (let row_num = 0; row_num < 8; row_num++) {\n    let row = [];\n    for (let col_num = 0; col_num < 8; col_num++) {\n      if (gameState) {\n        let spot_piece = gameState[grid[col_num][row_num]][0];\n        let squareColor = row_num % 2 === 0 ? col_num % 2 === 0 ? 'bg-black-square' : 'bg-white-square' : col_num % 2 === 0 ? 'bg-white-square' : 'bg-black-square';\n        if (spot_piece) {\n          row.push( /*#__PURE__*/_jsxDEV(DraggablePiece, {\n            spot_piece: spot_piece,\n            squareColor: squareColor\n          }, `${row_num}-${col_num}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this));\n        } else {\n          row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-square h-square flex items-center justify-center ${squareColor}`\n          }, `${row_num}-${col_num}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 20\n          }, this));\n        }\n      }\n    }\n    chessBoard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen flex items-center justify-center\",\n      children: row\n    }, row_num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board\",\n    children: chessBoard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChessBoard, \"6sp7jZocGFPQ3p3XacAh6k8hdG0=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = ChessBoard;\nconst DraggablePiece = _ref => {\n  _s3();\n  let {\n    spot_piece,\n    squareColor\n  } = _ref;\n  const {\n    initiatingUser: player1,\n    receivingUser: player2,\n    setInitiatingUser,\n    setReceivingUser,\n    gameState,\n    setGameState\n  } = useContext(GameContext);\n  const piece = svgIcons[spot_piece.pieceName];\n  console.log(`draggablepiece being rendered the piece(supposed to be svg) isvvv`);\n  console.log(piece);\n  const [{\n    isDragging\n  }, dragRef] = useDrag({\n    type: 'piece',\n    item: {\n      type: 'piece',\n      piece: spot_piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [{\n    canDrop,\n    isOver\n  }, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item, monitor) => {\n      const start = item.piece.position;\n      const end = spot_piece.position;\n      let copy_state = {\n        ...gameState\n      };\n      if (player1 && player2) {\n        const moveResult = process_move(start, end, copy_state, player1, player2);\n        if (moveResult.isValid) {\n          setInitiatingUser(moveResult.player1);\n          setReceivingUser(moveResult.player2);\n          setGameState(moveResult.newState);\n        } else {\n          setGameState(moveResult.newState);\n        }\n      }\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    className: `w-square h-square flex items-center justify-center ${squareColor}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dragRef,\n      children: piece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s3(DraggablePiece, \"2Pdo6gkTA4F9vT0H+gvOBVgnRBE=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c3 = DraggablePiece;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ActiveGame\");\n$RefreshReg$(_c2, \"ChessBoard\");\n$RefreshReg$(_c3, \"DraggablePiece\");","map":{"version":3,"names":["React","useEffect","useContext","useCallback","grid","process_move","GameContext","useDrag","useDrop","svgIcons","jsxDEV","_jsxDEV","Fragment","_Fragment","ActiveGame","_s","initiatingUser","player1","receivingUser","player2","gameState","setGameState","console","log","setPiecesOnBoard","allPieces","alive","concat","allPositions","map","p","position","newGameState","spot","includes","children","ChessBoard","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","setInigameState","chessBoard","piece","spot_piece","pieceName","isDragging","dragRef","type","item","collect","monitor","canDrop","isOver","dropRef","accept","drop","start","end","copy_state","moveResult","isValid","setInitiatingUser","setReceivingUser","newState","row_num","row","col_num","squareColor","push","DraggablePiece","className","_c2","_ref","_s3","ref","_c3","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx"],"sourcesContent":["import React, { useEffect, useContext, useCallback } from 'react';\nimport { Piece, grid, process_move } from '../utils/game-utils'\nimport { GameContext } from \"../context/GameContext\";\nimport { ConnectableElement, useDrag, useDrop } from 'react-dnd';\nimport { svgIcons } from '../utils/svg-icons';\n\ninterface DraggablePieceProps {\n  spot_piece: Piece;\n  squareColor: string;\n}\n\nexport const ActiveGame: React.FC<{}> = () => {\n\n  const { initiatingUser: player1, receivingUser: player2, gameState, setGameState } = useContext(GameContext);\n  console.log(gameState)\n\n  const setPiecesOnBoard = useCallback(() => {\n    if (player1 && player2) {\n      const allPieces = player1.alive.concat(player2.alive);\n      const allPositions = allPieces.map(p => p.position);\n      const newGameState = {...gameState};\n      for (const spot in newGameState) {\n        if (allPositions.includes(spot)) {\n          for (const p of allPieces) {\n            if (p.position === spot) {\n              newGameState[spot][0] = p;\n            }\n          }\n        }\n      }\n      console.log(\"newGameState in setPiecesOnBoard VVVVVVVVVVVVVVVV\")\n      console.log(newGameState);\n      setGameState(newGameState);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player1, player2]);\n\n  useEffect(() => {\n    setPiecesOnBoard();\n  }, [setPiecesOnBoard]);\n\n  return (\n    <>\n      <ChessBoard />\n    </>\n  );\n};\n\nconst ChessBoard: React.FC<{}> = () => {\n  const { setInigameState } = useContext(GameContext);\n  const chessBoard = [];\n  const piece = svgIcons[spot_piece.pieceName];\n  console.log(`draggablepiece being rendered the piece(supposed to be svg) isvvv`)\n  console.log(piece)\n\n  const [{ isDragging }, dragRef] = useDrag({\n    type: 'piece',\n    item: { type: 'piece', piece: spot_piece },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  })\n\n  const [{ canDrop, isOver }, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item: any, monitor) => {\n      const start = item.piece.position; \n      const end = spot_piece.position;\n      let copy_state = {...gameState};\n      if (player1 && player2) {\n        const moveResult = process_move(start, end, copy_state, player1, player2 )\n        if (moveResult.isValid) {\n          setInitiatingUser(moveResult.player1);\n          setReceivingUser(moveResult.player2);\n          setGameState(moveResult.newState);\n        }\n        else {\n          setGameState(moveResult.newState);\n        }\n      }\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n    }),\n  })\n\n  for (let row_num = 0; row_num < 8; row_num++) {\n    let row = [];\n    for (let col_num = 0; col_num < 8; col_num++) {\n      if (gameState) {\n        let spot_piece = gameState[grid[col_num][row_num]][0];\n        let squareColor = row_num % 2 === 0 \n        ? col_num % 2 === 0 ? 'bg-black-square' : 'bg-white-square' \n        : col_num % 2 === 0 ? 'bg-white-square' : 'bg-black-square';\n        if (spot_piece){\n          row.push(\n            <DraggablePiece key={`${row_num}-${col_num}`} spot_piece={spot_piece} squareColor={squareColor} />\n          );\n        } else {\n          row.push(<div key={`${row_num}-${col_num}`} className={`w-square h-square flex items-center justify-center ${squareColor}`}></div>)\n        }\n      }\n    }\n    chessBoard.push(<div key={row_num} className=\"w-screen flex items-center justify-center\">{row}</div>);\n  }\n\n  return (\n    <div className=\"chess-board\">\n      {chessBoard}\n    </div>\n  );\n}\n\nconst DraggablePiece: React.FC<DraggablePieceProps> = ({ spot_piece, squareColor }) => {\n\n  const{ initiatingUser: player1, receivingUser: player2, setInitiatingUser, setReceivingUser, gameState, setGameState } = useContext(GameContext);\n  const piece = svgIcons[spot_piece.pieceName];\n  console.log(`draggablepiece being rendered the piece(supposed to be svg) isvvv`)\n  console.log(piece)\n\n  const [{ isDragging }, dragRef] = useDrag({\n    type: 'piece',\n    item: { type: 'piece', piece: spot_piece },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  })\n\n  const [{ canDrop, isOver }, dropRef] = useDrop({\n    accept: 'piece',\n    drop: (item: any, monitor) => {\n      const start = item.piece.position; \n      const end = spot_piece.position;\n      let copy_state = {...gameState};\n      if (player1 && player2) {\n        const moveResult = process_move(start, end, copy_state, player1, player2 )\n        if (moveResult.isValid) {\n          setInitiatingUser(moveResult.player1);\n          setReceivingUser(moveResult.player2);\n          setGameState(moveResult.newState);\n        }\n        else {\n          setGameState(moveResult.newState);\n        }\n      }\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n    }),\n  })\n\n  return (\n    <div ref={dropRef} className={`w-square h-square flex items-center justify-center ${squareColor}`}>\n      <div ref={dragRef}>{piece}</div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}