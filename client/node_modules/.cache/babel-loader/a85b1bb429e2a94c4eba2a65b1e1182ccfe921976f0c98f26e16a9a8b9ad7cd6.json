{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useContext, useEffect, useState } from \"react\";\n//import { useNavigate } from 'react-router-dom'\n\n//import { AuthContext } from \"../context/AuthContext\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StartGamePortal = _ref => {\n  _s();\n  let {\n    expressApi\n  } = _ref;\n  console.log('StartGamePortal render');\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:3001');\n  const [messageHistory, setMessageHistory] = useState([]);\n  const {\n    username\n  } = useContext(AuthContext);\n  const {\n    sendMessage,\n    lastMessage,\n    lastJsonMessage,\n    readyState\n  } = useWebSocket(socketUrl, {\n    onOpen: () => console.log('opened'),\n    shouldReconnect: closeEvent => true\n  });\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyState];\n  function handleIncomingData(data) {\n    // Existing data handling code...\n  }\n  useEffect(() => {\n    expressApi.getLoggedInUsers().then(res => res.json()).then(data => {\n      setUsers(data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setIsLoading(false);\n    });\n  }, [expressApi]);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessageHistory(prev => prev.concat(lastMessage.data));\n      if (lastMessage.data instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          console.log('Blob data:', reader.result);\n        };\n        reader.readAsText(lastMessage.data);\n      }\n      console.log(lastMessage);\n      console.log(lastMessage.data);\n      const data = lastJsonMessage;\n      if (data) {\n        if (data.type === 'game-invite') {\n          const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n          const responseMessage = JSON.stringify({\n            type: 'game-invite-response',\n            accepted,\n            recievingUser: data.initiatingUser,\n            initiatingUser: data.recievingUser\n          });\n          sendMessage(responseMessage);\n        } else if (data.type === 'game-start') {\n          expressApi.createGame(data, gameId => {\n            Cookies.set('activeGameId', gameId);\n            /*#__PURE__*/_jsxDEV(Navigate, {\n              to: `/game/${data.gameId}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 11\n            }, this);\n          });\n        } else if (data.type === 'game-decline') {\n          alert(`${data.initiatingUser} declined to start a game.`);\n        }\n      }\n    }\n  }, [lastMessage, setMessageHistory, sendMessage, expressApi]);\n  const handleUsernameClick = useCallback(evt => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({\n      type: 'game-invite',\n      recievingUser: player2,\n      initiatingUser: username\n    });\n    sendMessage(message);\n  }, [sendMessage, username]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((username, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: readyState !== ReadyState.OPEN,\n          \"data-username\": username,\n          onClick: handleUsernameClick,\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users are currently logged in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(StartGamePortal, \"sV/e1kMFHj1TUpkV9OGSdMJ8SZA=\", false, function () {\n  return [useWebSocket];\n});\n_c = StartGamePortal;\nvar _c;\n$RefreshReg$(_c, \"StartGamePortal\");","map":{"version":3,"names":["useCallback","useContext","useEffect","useState","useWebSocket","ReadyState","Navigate","AuthContext","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","StartGamePortal","_ref","_s","expressApi","console","log","users","setUsers","isLoading","setIsLoading","socketUrl","setSocketUrl","messageHistory","setMessageHistory","username","sendMessage","lastMessage","lastJsonMessage","readyState","onOpen","shouldReconnect","closeEvent","connectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","handleIncomingData","data","getLoggedInUsers","then","res","json","catch","err","error","prev","concat","Blob","reader","FileReader","onload","result","readAsText","type","accepted","window","confirm","inviterUsername","responseMessage","JSON","stringify","recievingUser","initiatingUser","createGame","gameId","set","to","fileName","_jsxFileName","lineNumber","columnNumber","alert","handleUsernameClick","evt","player2","currentTarget","dataset","message","children","length","map","index","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx"],"sourcesContent":["import { FC, useCallback, useContext, useEffect, useState } from \"react\"\n//import { useNavigate } from 'react-router-dom'\nimport ExpressAPI from \"../api/express-api\";\n//import { AuthContext } from \"../context/AuthContext\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Cookies from \"js-cookie\";\nimport { JsonObject, JsonValue } from \"react-use-websocket/dist/lib/types\";\n\ninterface StartGamePortalProps {\n  expressApi: ExpressAPI;\n}\n\ninterface StartGameMessageObject extends JsonObject {\n  type: string;\n  accepted?: boolean;\n  initiatingUser: string;\n  recievingUser: string;\n  gameId?: string;\n}\n\nexport const StartGamePortal: FC<StartGamePortalProps> = ({ expressApi }) => {\n  console.log('StartGamePortal render');\n\n  const [users, setUsers] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:3001');\n  const [messageHistory, setMessageHistory] = useState<string[]>([]);\n  const { username } = useContext(AuthContext)\n  const { \n    sendMessage, \n    lastMessage, \n    lastJsonMessage,\n    readyState \n  } = useWebSocket<StartGameMessageObject>(socketUrl, { \n    onOpen: () => console.log('opened'), \n    shouldReconnect: (closeEvent) => true,\n  });\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  function handleIncomingData(data: StartGameMessageObject) {\n    // Existing data handling code...\n  }\n  \n  \n  \n  \n  \n  \n\n  useEffect(() => {\n    expressApi.getLoggedInUsers()\n      .then((res) =>  res.json() )\n      .then((data) => {\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [expressApi]);\n\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessageHistory((prev) => prev.concat(lastMessage.data));\n      if (lastMessage.data instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          console.log('Blob data:', reader.result);\n        };\n        reader.readAsText(lastMessage.data);\n      }\n  \n      console.log(lastMessage)\n      console.log(lastMessage.data)\n      const data = lastJsonMessage;\n      if (data) {\n        if (data.type === 'game-invite') {\n          const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n          const responseMessage = JSON.stringify({ type: 'game-invite-response', accepted, recievingUser: data.initiatingUser, initiatingUser: data.recievingUser });\n          sendMessage(responseMessage);\n      } else if (data.type === 'game-start') {\n        expressApi.createGame(data, ((gameId) => {\n          Cookies.set('activeGameId', gameId);\n          <Navigate to={`/game/${data.gameId}`} />;\n        }))\n      } else if (data.type === 'game-decline') {\n        alert(`${data.initiatingUser} declined to start a game.`);\n      }\n      }\n    }\n  }, [lastMessage, setMessageHistory, sendMessage, expressApi]);\n\n  const handleUsernameClick = useCallback((evt: React.MouseEvent<HTMLButtonElement>) => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({ type: 'game-invite', recievingUser: player2, initiatingUser: username });\n    sendMessage(message);\n  }, [sendMessage, username]);\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : users.length > 0 ? (\n        <ul>\n          {users.map((username, index) => (\n            <li key={index}>\n              <button \n                disabled={readyState !== ReadyState.OPEN} \n                data-username={username} \n                onClick={handleUsernameClick}>\n                {username}\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No users are currently logged in.</p>\n      )}\n    </>\n  )\n}"],"mappings":";;AAAA,SAAaA,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxE;;AAEA;AACA,OAAOC,YAAY,IAAIC,UAAU,QAAQ,qBAAqB;AAC9D,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAehC,OAAO,MAAMC,eAAyC,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACtEG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAErC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,qBAAqB,CAAC;EACjE,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAW,EAAE,CAAC;EAClE,MAAM;IAAEwB;EAAS,CAAC,GAAG1B,UAAU,CAACM,WAAW,CAAC;EAC5C,MAAM;IACJqB,WAAW;IACXC,WAAW;IACXC,eAAe;IACfC;EACF,CAAC,GAAG3B,YAAY,CAAyBmB,SAAS,EAAE;IAClDS,MAAM,EAAEA,CAAA,KAAMf,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACnCe,eAAe,EAAGC,UAAU,IAAK;EACnC,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAG;IACvB,CAAC9B,UAAU,CAAC+B,UAAU,GAAG,YAAY;IACrC,CAAC/B,UAAU,CAACgC,IAAI,GAAG,MAAM;IACzB,CAAChC,UAAU,CAACiC,OAAO,GAAG,SAAS;IAC/B,CAACjC,UAAU,CAACkC,MAAM,GAAG,QAAQ;IAC7B,CAAClC,UAAU,CAACmC,cAAc,GAAG;EAC/B,CAAC,CAACT,UAAU,CAAC;EAEb,SAASU,kBAAkBA,CAACC,IAA4B,EAAE;IACxD;EAAA;EASFxC,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC2B,gBAAgB,CAAC,CAAC,CAC1BC,IAAI,CAAEC,GAAG,IAAMA,GAAG,CAACC,IAAI,CAAC,CAAE,CAAC,CAC3BF,IAAI,CAAEF,IAAI,IAAK;MACdtB,QAAQ,CAACsB,IAAI,CAAC;MACdpB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDyB,KAAK,CAAEC,GAAG,IAAK;MACd/B,OAAO,CAACgC,KAAK,CAACD,GAAG,CAAC;MAClB1B,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhBd,SAAS,CAAC,MAAM;IACd,IAAI2B,WAAW,KAAK,IAAI,EAAE;MACxBH,iBAAiB,CAAEwB,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACtB,WAAW,CAACa,IAAI,CAAC,CAAC;MAC1D,IAAIb,WAAW,CAACa,IAAI,YAAYU,IAAI,EAAE;QACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;UACpBtC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEmC,MAAM,CAACG,MAAM,CAAC;QAC1C,CAAC;QACDH,MAAM,CAACI,UAAU,CAAC5B,WAAW,CAACa,IAAI,CAAC;MACrC;MAEAzB,OAAO,CAACC,GAAG,CAACW,WAAW,CAAC;MACxBZ,OAAO,CAACC,GAAG,CAACW,WAAW,CAACa,IAAI,CAAC;MAC7B,MAAMA,IAAI,GAAGZ,eAAe;MAC5B,IAAIY,IAAI,EAAE;QACR,IAAIA,IAAI,CAACgB,IAAI,KAAK,aAAa,EAAE;UAC/B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAAE,sCAAqCnB,IAAI,CAACoB,eAAgB,kBAAiB,CAAC;UAC7G,MAAMC,eAAe,GAAGC,IAAI,CAACC,SAAS,CAAC;YAAEP,IAAI,EAAE,sBAAsB;YAAEC,QAAQ;YAAEO,aAAa,EAAExB,IAAI,CAACyB,cAAc;YAAEA,cAAc,EAAEzB,IAAI,CAACwB;UAAc,CAAC,CAAC;UAC1JtC,WAAW,CAACmC,eAAe,CAAC;QAChC,CAAC,MAAM,IAAIrB,IAAI,CAACgB,IAAI,KAAK,YAAY,EAAE;UACrC1C,UAAU,CAACoD,UAAU,CAAC1B,IAAI,EAAI2B,MAAM,IAAK;YACvC7D,OAAO,CAAC8D,GAAG,CAAC,cAAc,EAAED,MAAM,CAAC;YACnC,aAAA3D,OAAA,CAACJ,QAAQ;cAACiE,EAAE,EAAG,SAAQ7B,IAAI,CAAC2B,MAAO;YAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAC1C,CAAE,CAAC;QACL,CAAC,MAAM,IAAIjC,IAAI,CAACgB,IAAI,KAAK,cAAc,EAAE;UACvCkB,KAAK,CAAE,GAAElC,IAAI,CAACyB,cAAe,4BAA2B,CAAC;QAC3D;MACA;IACF;EACF,CAAC,EAAE,CAACtC,WAAW,EAAEH,iBAAiB,EAAEE,WAAW,EAAEZ,UAAU,CAAC,CAAC;EAE7D,MAAM6D,mBAAmB,GAAG7E,WAAW,CAAE8E,GAAwC,IAAK;IACpF,MAAMC,OAAO,GAAGD,GAAG,CAACE,aAAa,CAACC,OAAO,CAACtD,QAAQ;IAClD,MAAMuD,OAAO,GAAGlB,IAAI,CAACC,SAAS,CAAC;MAAEP,IAAI,EAAE,aAAa;MAAEQ,aAAa,EAAEa,OAAO;MAAEZ,cAAc,EAAExC;IAAS,CAAC,CAAC;IACzGC,WAAW,CAACsD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACtD,WAAW,EAAED,QAAQ,CAAC,CAAC;EAE3B,oBACEjB,OAAA,CAAAE,SAAA;IAAAuE,QAAA,EACG9D,SAAS,gBACRX,OAAA;MAAAyE,QAAA,EAAG;IAAU;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACfxD,KAAK,CAACiE,MAAM,GAAG,CAAC,gBAClB1E,OAAA;MAAAyE,QAAA,EACGhE,KAAK,CAACkE,GAAG,CAAC,CAAC1D,QAAQ,EAAE2D,KAAK,kBACzB5E,OAAA;QAAAyE,QAAA,eACEzE,OAAA;UACE6E,QAAQ,EAAExD,UAAU,KAAK1B,UAAU,CAACgC,IAAK;UACzC,iBAAeV,QAAS;UACxB6D,OAAO,EAAEX,mBAAoB;UAAAM,QAAA,EAC5BxD;QAAQ;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GANFW,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELjE,OAAA;MAAAyE,QAAA,EAAG;IAAiC;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxC,gBACD,CAAC;AAEP,CAAC;AAAA5D,EAAA,CA3GYF,eAAyC;EAAA,QAahDT,YAAY;AAAA;AAAAqF,EAAA,GAbL5E,eAAyC;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}