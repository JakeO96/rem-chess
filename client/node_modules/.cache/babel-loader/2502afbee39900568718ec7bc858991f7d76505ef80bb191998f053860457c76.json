{"ast":null,"code":"'use strict';\n\nconst util = require('util');\nfunction MissingEnvVarsError(allowEmptyValues, dotenvFilename, exampleFilename, missingVars, error) {\n  const errorMessage = `The following variables were defined in ${exampleFilename} but are not present in the environment:\\n  ${missingVars.join(', ')}\nMake sure to add them to ${dotenvFilename} or directly to the environment.`;\n  const allowEmptyValuesMessage = !allowEmptyValues ? `If you expect any of these variables to be empty, you can use the allowEmptyValues option:\nrequire('dotenv-safe').config({\n  allowEmptyValues: true\n});` : '';\n  const envErrorMessage = error ? `Also, the following error was thrown when trying to read variables from  ${dotenvFilename}:\\n${error.message}` : '';\n  Error.call(this);\n  this.name = this.constructor.name;\n  this.missing = missingVars;\n  this.example = this.sample = exampleFilename;\n  this.message = [errorMessage, allowEmptyValuesMessage, envErrorMessage].filter(Boolean).join('\\n\\n');\n  Error.captureStackTrace(this, this.constructor);\n}\nutil.inherits(MissingEnvVarsError, Error);\nmodule.exports = MissingEnvVarsError;","map":{"version":3,"names":["util","require","MissingEnvVarsError","allowEmptyValues","dotenvFilename","exampleFilename","missingVars","error","errorMessage","join","allowEmptyValuesMessage","envErrorMessage","message","Error","call","name","constructor","missing","example","sample","filter","Boolean","captureStackTrace","inherits","module","exports"],"sources":["/home/jake/rem-stack/chess/client/node_modules/dotenv-safe/MissingEnvVarsError.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\n\nfunction MissingEnvVarsError (allowEmptyValues, dotenvFilename, exampleFilename, missingVars, error) {\n    const errorMessage = `The following variables were defined in ${exampleFilename} but are not present in the environment:\\n  ${missingVars.join(', ')}\nMake sure to add them to ${dotenvFilename} or directly to the environment.`;\n    const allowEmptyValuesMessage = !allowEmptyValues ? `If you expect any of these variables to be empty, you can use the allowEmptyValues option:\nrequire('dotenv-safe').config({\n  allowEmptyValues: true\n});` : '';\n    const envErrorMessage = error ? `Also, the following error was thrown when trying to read variables from  ${dotenvFilename}:\\n${error.message}` : '';\n    Error.call(this);\n    this.name = this.constructor.name;\n    this.missing = missingVars;\n    this.example = this.sample = exampleFilename;\n    this.message = [errorMessage, allowEmptyValuesMessage, envErrorMessage]\n        .filter(Boolean)\n        .join('\\n\\n');\n    Error.captureStackTrace(this, this.constructor);\n}\n\nutil.inherits(MissingEnvVarsError, Error);\nmodule.exports = MissingEnvVarsError;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,SAASC,mBAAmBA,CAAEC,gBAAgB,EAAEC,cAAc,EAAEC,eAAe,EAAEC,WAAW,EAAEC,KAAK,EAAE;EACjG,MAAMC,YAAY,GAAI,2CAA0CH,eAAgB,+CAA8CC,WAAW,CAACG,IAAI,CAAC,IAAI,CAAE;AACzJ,2BAA2BL,cAAe,kCAAiC;EACvE,MAAMM,uBAAuB,GAAG,CAACP,gBAAgB,GAAI;AACzD;AACA;AACA,IAAI,GAAG,EAAE;EACL,MAAMQ,eAAe,GAAGJ,KAAK,GAAI,4EAA2EH,cAAe,MAAKG,KAAK,CAACK,OAAQ,EAAC,GAAG,EAAE;EACpJC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;EAChB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACD,IAAI;EACjC,IAAI,CAACE,OAAO,GAAGX,WAAW;EAC1B,IAAI,CAACY,OAAO,GAAG,IAAI,CAACC,MAAM,GAAGd,eAAe;EAC5C,IAAI,CAACO,OAAO,GAAG,CAACJ,YAAY,EAAEE,uBAAuB,EAAEC,eAAe,CAAC,CAClES,MAAM,CAACC,OAAO,CAAC,CACfZ,IAAI,CAAC,MAAM,CAAC;EACjBI,KAAK,CAACS,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACN,WAAW,CAAC;AACnD;AAEAhB,IAAI,CAACuB,QAAQ,CAACrB,mBAAmB,EAAEW,KAAK,CAAC;AACzCW,MAAM,CAACC,OAAO,GAAGvB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}