{"ast":null,"code":"var _jsxFileName = \"/home/jake/rem-stack/chess/client/src/context/GameContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext({\n  initiatingUser: '',\n  receivingUser: '',\n  setInitiatingUser: () => {},\n  setReceivingUser: () => {}\n});\nexport const GameProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [initiatingUser, setInitiatingUser] = useState('');\n  const [receivingUser, setReceivingUser] = useState('');\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:3001');\n  const {\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useWebSocket(socketUrl, {\n    onOpen: () => console.log('opened'),\n    shouldReconnect: closeEvent => true\n  });\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated'\n  }[readyState];\n  useEffect(() => {\n    function handleIncomingData(data) {\n      const {\n        type,\n        initiatingUser,\n        receivingUser\n      } = data;\n      if (initiatingUser && receivingUser) {\n        if (type === 'game-player-usernames') {\n          setInitiatingUser(initiatingUser);\n          setReceivingUser(receivingUser);\n        }\n      }\n    }\n    if (!initiatingUser && !receivingUser) {\n      if (lastMessage !== null) {\n        if (lastMessage.data instanceof Blob) {\n          const reader = new FileReader();\n          reader.onload = () => {\n            if (typeof reader.result === 'string') {\n              const data = JSON.parse(reader.result);\n              handleIncomingData(data);\n            }\n          };\n          reader.readAsText(lastMessage.data);\n        } else {\n          const data = JSON.parse(lastMessage.data);\n          handleIncomingData(data);\n        }\n      }\n      const message = JSON.stringify({\n        type: 'get-game-players',\n        gameId: ''\n      });\n      sendMessage(message);\n    }\n  }, [initiatingUser, lastMessage, receivingUser, sendMessage]);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      initiatingUser,\n      receivingUser,\n      setInitiatingUser,\n      setReceivingUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"mKaGimCDb3AVl+kd4GNAtWW/OvI=\", false, function () {\n  return [useWebSocket];\n});\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useWebSocket","ReadyState","jsxDEV","_jsxDEV","GameContext","initiatingUser","receivingUser","setInitiatingUser","setReceivingUser","GameProvider","_ref","_s","children","socketUrl","setSocketUrl","sendMessage","lastMessage","readyState","onOpen","console","log","shouldReconnect","closeEvent","connectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","handleIncomingData","data","type","Blob","reader","FileReader","onload","result","JSON","parse","readAsText","message","stringify","gameId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jake/rem-stack/chess/client/src/context/GameContext.tsx"],"sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { JsonObject } from 'react-use-websocket/dist/lib/types';\n\ninterface GetGamePlayerUsernames extends JsonObject {\n  type: string;\n  gameId: string;\n  initiatingUser?: string;\n  recievingUser?: string;\n}\n\ntype GameContextType = {\n  initiatingUser: string;\n  receivingUser: string;\n  setInitiatingUser: (username: string) => void;\n  setReceivingUser: (username: string) => void;\n};\n\nexport const GameContext = createContext<GameContextType>({\n  initiatingUser: '',\n  receivingUser: '',\n  setInitiatingUser: () => {},\n  setReceivingUser: () => {},\n});\n\ntype GameProviderProps = {\n  children: ReactNode;\n};\n\nexport const GameProvider: React.FC<GameProviderProps> = ({ children }) => {\n  const [initiatingUser, setInitiatingUser] = useState<string>('');\n  const [receivingUser, setReceivingUser] = useState<string>('');\n  const [socketUrl, setSocketUrl] = useState('ws://localhost:3001');\n  const { \n    sendMessage, \n    lastMessage,\n    readyState \n  } = useWebSocket<GetGamePlayerUsernames>(socketUrl, { \n    onOpen: () => console.log('opened'), \n    shouldReconnect: (closeEvent) => true,\n  });\n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n\n  useEffect(() => {\n    function handleIncomingData(data: GetGamePlayerUsernames) {\n      const { type, initiatingUser, receivingUser } = data;\n      if (initiatingUser && receivingUser) {\n        if (type === 'game-player-usernames') {\n          setInitiatingUser(initiatingUser);\n          setReceivingUser(receivingUser);\n        }\n      }\n    }\n    if (!initiatingUser && !receivingUser) {\n      if (lastMessage !== null) {\n        if (lastMessage.data instanceof Blob) {\n          const reader = new FileReader();\n          reader.onload = () => {\n            if (typeof reader.result === 'string') {\n              const data = JSON.parse(reader.result);\n              handleIncomingData(data);\n            }\n          };\n          reader.readAsText(lastMessage.data);\n        } else {\n          const data = JSON.parse(lastMessage.data);\n          handleIncomingData(data);\n        }\n      }\n      const message = JSON.stringify({type: 'get-game-players', gameId: ''})\n      sendMessage(message);\n    }\n  }, [initiatingUser, lastMessage, receivingUser, sendMessage]);\n\n  return (\n    <GameContext.Provider value={{ initiatingUser, receivingUser, setInitiatingUser, setReceivingUser }}>\n      {children}\n    </GameContext.Provider>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}