[{"/home/jake/rem-stack/chess/client/src/index.tsx":"1","/home/jake/rem-stack/chess/client/src/reportWebVitals.ts":"2","/home/jake/rem-stack/chess/client/src/App.tsx":"3","/home/jake/rem-stack/chess/client/src/api/express-api.ts":"4","/home/jake/rem-stack/chess/client/src/pages/HomePage.tsx":"5","/home/jake/rem-stack/chess/client/src/pages/LogInPage.tsx":"6","/home/jake/rem-stack/chess/client/src/components/LogInForm.tsx":"7","/home/jake/rem-stack/chess/client/src/components/MainLayout.tsx":"8","/home/jake/rem-stack/chess/client/src/components/MainHeader.tsx":"9","/home/jake/rem-stack/chess/client/src/components/FormFields.tsx":"10","/home/jake/rem-stack/chess/client/src/pages/UserDashboardPage.tsx":"11","/home/jake/rem-stack/chess/client/src/components/RegisterForm.tsx":"12","/home/jake/rem-stack/chess/client/src/pages/RegisterPage.tsx":"13","/home/jake/rem-stack/chess/client/src/context/AuthContext.tsx":"14","/home/jake/rem-stack/chess/client/src/components/ProtectedRoute.tsx":"15","/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx":"16","/home/jake/rem-stack/chess/client/src/pages/ActiveGamePage.tsx":"17","/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx":"18","/home/jake/rem-stack/chess/client/src/pages/NewUserRedirectVerifyEmail.tsx":"19","/home/jake/rem-stack/chess/client/src/utils/game-utils.ts":"20","/home/jake/rem-stack/chess/client/src/context/GameContext.tsx":"21","/home/jake/rem-stack/chess/client/src/utils/svg-icons.tsx":"22"},{"size":554,"mtime":1688152721958,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1687374351293,"results":"25","hashOfConfig":"24"},{"size":1875,"mtime":1690851974681,"results":"26","hashOfConfig":"24"},{"size":2829,"mtime":1690086852749,"results":"27","hashOfConfig":"24"},{"size":403,"mtime":1688260808268,"results":"28","hashOfConfig":"24"},{"size":245,"mtime":1689788180322,"results":"29","hashOfConfig":"24"},{"size":5215,"mtime":1689875330530,"results":"30","hashOfConfig":"24"},{"size":372,"mtime":1689102191033,"results":"31","hashOfConfig":"24"},{"size":2147,"mtime":1689788881927,"results":"32","hashOfConfig":"24"},{"size":4980,"mtime":1690608231720,"results":"33","hashOfConfig":"24"},{"size":526,"mtime":1689920191128,"results":"34","hashOfConfig":"24"},{"size":6571,"mtime":1690652897218,"results":"35","hashOfConfig":"24"},{"size":418,"mtime":1689009207632,"results":"36","hashOfConfig":"24"},{"size":2393,"mtime":1690087532067,"results":"37","hashOfConfig":"24"},{"size":563,"mtime":1689874298008,"results":"38","hashOfConfig":"24"},{"size":4643,"mtime":1691094390234,"results":"39","hashOfConfig":"24"},{"size":254,"mtime":1690851990193,"results":"40","hashOfConfig":"24"},{"size":8100,"mtime":1691092397117,"results":"41","hashOfConfig":"24"},{"size":902,"mtime":1690652846174,"results":"42","hashOfConfig":"24"},{"size":9789,"mtime":1691094056143,"results":"43","hashOfConfig":"24"},{"size":2906,"mtime":1691039546060,"results":"44","hashOfConfig":"24"},{"size":13889,"mtime":1690856369004,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"2lf18s",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jake/rem-stack/chess/client/src/index.tsx",[],[],[],"/home/jake/rem-stack/chess/client/src/reportWebVitals.ts",[],[],"/home/jake/rem-stack/chess/client/src/App.tsx",[],[],"/home/jake/rem-stack/chess/client/src/api/express-api.ts",[],[],"/home/jake/rem-stack/chess/client/src/pages/HomePage.tsx",[],[],"/home/jake/rem-stack/chess/client/src/pages/LogInPage.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/LogInForm.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/MainLayout.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/MainHeader.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/FormFields.tsx",[],[],"/home/jake/rem-stack/chess/client/src/pages/UserDashboardPage.tsx",["116","117"],[],"import { FC, useEffect, useState } from \"react\";\nimport MainLayout from \"../components/MainLayout\";\nimport ExpressAPI from \"../api/express-api\";\nimport { StartGamePortal } from \"../components/StartGamePortal\";\n\ninterface DashboardPageProps {\n  expressApi: ExpressAPI\n}\n\nexport const DashboardPage: FC<DashboardPageProps> = ({ expressApi }) => {\n\n  return (\n    <MainLayout>\n      <header>\n        <h1>\n          DASHBOARD\n        </h1>\n      </header>\n      <StartGamePortal expressApi={expressApi} />\n    </MainLayout>\n  );\n}","/home/jake/rem-stack/chess/client/src/components/RegisterForm.tsx",[],[],"/home/jake/rem-stack/chess/client/src/pages/RegisterPage.tsx",[],[],"/home/jake/rem-stack/chess/client/src/context/AuthContext.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/ProtectedRoute.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx",["118"],[],"import { FC, useCallback, useContext, useEffect, useState } from \"react\"\nimport ExpressAPI from \"../api/express-api\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { GameContext, StartGameMessageObject } from \"../context/GameContext\";\nimport { Player, assignBlackPieces, assignWhitePieces, grid } from \"../utils/game-utils\";\nimport { ReadyState } from \"react-use-websocket\";\n\ninterface StartGamePortalProps {\n  expressApi: ExpressAPI;\n}\n\nexport const StartGamePortal: FC<StartGamePortalProps> = ({ expressApi }) => {\n  console.log('StartGamePortal render');\n\n  const [navigateReady, setNavigateReady] = useState<boolean>(false);\n  const [users, setUsers] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { username } = useContext(AuthContext)\n  const { gameId, setGameId, setInitiatingUser, setReceivingUser,sendMessage, lastMessage, readyState } = useContext(GameContext)\n\n  useEffect(() => {\n    expressApi.getLoggedInUsers()\n      .then((res) =>  res.json() )\n      .then((data) => {\n        setUsers(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [expressApi]);\n\n  useEffect(() => {\n    \n    function randomlyAssignWhite(player1: Player, player2: Player): Player[] {\n      const r = Math.floor(Math.random() * 2);\n      if (r === 0) {\n        player1.color = 'white';\n        player2.color = 'black';\n        assignWhitePieces(player1);\n        assignBlackPieces(player2);\n      } else {\n        player1.color = 'black';\n        player2.color = 'white';\n        assignWhitePieces(player2);\n        assignBlackPieces(player1);\n      }\n      return [player1, player2];\n    }\n\n    function handleIncomingData(data: StartGameMessageObject) {\n      if (data.type === 'game-invite') {\n        const accepted = window.confirm(`You have been invited to a game by ${data.inviterUsername}. Do you accept?`);\n        const responseMessage = JSON.stringify({ type: 'game-invite-response', accepted, recievingUser: data.initiatingUser, initiatingUser: data.recievingUser });\n        sendMessage(responseMessage);\n      } else if (data.type === 'create-game') {\n        expressApi.createGame(data, ((gameId) => {\n          const responseMessage = JSON.stringify({ type: 'game-created', recievingUser: data.initiatingUser, initiatingUser: data.recievingUser, gameId: gameId})\n          sendMessage(responseMessage);\n        }))\n      } else if (data.type === 'start-game') {\n        let player1 = new Player(data.initiatingUser, '', [], []);\n        let player2 = new Player(data.recievingUser, '', [], []);\n        let [player1WithPieces, player2WithPieces] = randomlyAssignWhite(player1, player2);\n        if (data.gameId) {\n          setGameId(data.gameId);\n        }\n        setInitiatingUser(player1WithPieces);\n        setReceivingUser(player2WithPieces);\n        setNavigateReady(true);\n      } else if (data.type === 'game-decline') {\n        alert(`${data.initiatingUser} declined to start a game.`);\n      }\n    }\n\n    if (lastMessage !== null) {\n      if (lastMessage.data instanceof Blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            const data = JSON.parse(reader.result);\n            handleIncomingData(data);\n          }\n        };\n        reader.readAsText(lastMessage.data);\n      } else {\n        const data = JSON.parse(lastMessage.data);\n        handleIncomingData(data);\n      }\n    }\n  }, [lastMessage, expressApi, sendMessage, setGameId, setInitiatingUser, setReceivingUser]);\n\n  const handleUsernameClick = useCallback((evt: React.MouseEvent<HTMLButtonElement>) => {\n    const player2 = evt.currentTarget.dataset.username;\n    const message = JSON.stringify({ type: 'game-invite', recievingUser: player2, initiatingUser: username });\n    sendMessage(message);\n  }, [sendMessage, username]);\n\n  return (\n    <>\n      {\n      navigateReady ? (\n        <Navigate to={`/game/${gameId}`} />\n      ) :  isLoading ? (\n          <p>Loading...</p>\n        ) : users.length > 0 ? (\n          <ul>\n            {users.map((username, index) => (\n              <li key={index}>\n                <button \n                  disabled={readyState !== ReadyState.OPEN} \n                  data-username={username} \n                  onClick={handleUsernameClick}>\n                  {username}\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No users are currently logged in.</p>\n        )\n      }\n    </>\n  )\n}","/home/jake/rem-stack/chess/client/src/pages/ActiveGamePage.tsx",[],[],[],"/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx",["119"],["120"],"/home/jake/rem-stack/chess/client/src/pages/NewUserRedirectVerifyEmail.tsx",[],[],"/home/jake/rem-stack/chess/client/src/utils/game-utils.ts",[],[],"/home/jake/rem-stack/chess/client/src/context/GameContext.tsx",[],[],"/home/jake/rem-stack/chess/client/src/utils/svg-icons.tsx",[],[],{"ruleId":"121","severity":1,"message":"122","line":1,"column":14,"nodeType":"123","messageId":"124","endLine":1,"endColumn":23},{"ruleId":"121","severity":1,"message":"125","line":1,"column":25,"nodeType":"123","messageId":"124","endLine":1,"endColumn":33},{"ruleId":"121","severity":1,"message":"126","line":6,"column":56,"nodeType":"123","messageId":"124","endLine":6,"endColumn":60},{"ruleId":"121","severity":1,"message":"127","line":219,"column":12,"nodeType":"123","messageId":"124","endLine":219,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":31,"column":6,"nodeType":"130","endLine":31,"endColumn":24,"suggestions":"131","suppressions":"132"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'grid' is defined but never used.","'isDragging' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'gameState' and 'setGameState'. Either include them or remove the dependency array.","ArrayExpression",["133"],["134"],{"desc":"135","fix":"136"},{"kind":"137","justification":"138"},"Update the dependencies array to be: [gameState, player1, player2, setGameState]",{"range":"139","text":"140"},"directive","",[1233,1251],"[gameState, player1, player2, setGameState]"]