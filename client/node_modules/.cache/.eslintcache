[{"/home/jake/rem-stack/chess/client/src/index.tsx":"1","/home/jake/rem-stack/chess/client/src/reportWebVitals.ts":"2","/home/jake/rem-stack/chess/client/src/App.tsx":"3","/home/jake/rem-stack/chess/client/src/api/express-api.ts":"4","/home/jake/rem-stack/chess/client/src/pages/HomePage.tsx":"5","/home/jake/rem-stack/chess/client/src/pages/LogInPage.tsx":"6","/home/jake/rem-stack/chess/client/src/components/LogInForm.tsx":"7","/home/jake/rem-stack/chess/client/src/components/MainLayout.tsx":"8","/home/jake/rem-stack/chess/client/src/components/MainHeader.tsx":"9","/home/jake/rem-stack/chess/client/src/components/FormFields.tsx":"10","/home/jake/rem-stack/chess/client/src/pages/UserDashboardPage.tsx":"11","/home/jake/rem-stack/chess/client/src/components/RegisterForm.tsx":"12","/home/jake/rem-stack/chess/client/src/pages/RegisterPage.tsx":"13","/home/jake/rem-stack/chess/client/src/context/AuthContext.tsx":"14","/home/jake/rem-stack/chess/client/src/components/ProtectedRoute.tsx":"15","/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx":"16","/home/jake/rem-stack/chess/client/src/pages/ActiveGamePage.tsx":"17","/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx":"18","/home/jake/rem-stack/chess/client/src/pages/NewUserRedirectVerifyEmail.tsx":"19","/home/jake/rem-stack/chess/client/src/utils/game-utils.ts":"20","/home/jake/rem-stack/chess/client/src/context/GameContext.tsx":"21","/home/jake/rem-stack/chess/client/src/utils/svg-icons.tsx":"22"},{"size":554,"mtime":1688152721958,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1687374351293,"results":"25","hashOfConfig":"24"},{"size":1875,"mtime":1690851974681,"results":"26","hashOfConfig":"24"},{"size":2829,"mtime":1690086852749,"results":"27","hashOfConfig":"24"},{"size":403,"mtime":1688260808268,"results":"28","hashOfConfig":"24"},{"size":245,"mtime":1689788180322,"results":"29","hashOfConfig":"24"},{"size":5215,"mtime":1689875330530,"results":"30","hashOfConfig":"24"},{"size":372,"mtime":1689102191033,"results":"31","hashOfConfig":"24"},{"size":2147,"mtime":1689788881927,"results":"32","hashOfConfig":"24"},{"size":4980,"mtime":1690608231720,"results":"33","hashOfConfig":"24"},{"size":526,"mtime":1689920191128,"results":"34","hashOfConfig":"24"},{"size":6571,"mtime":1690652897218,"results":"35","hashOfConfig":"24"},{"size":418,"mtime":1689009207632,"results":"36","hashOfConfig":"24"},{"size":2484,"mtime":1691183833849,"results":"37","hashOfConfig":"24"},{"size":563,"mtime":1689874298008,"results":"38","hashOfConfig":"24"},{"size":5047,"mtime":1691261882012,"results":"39","hashOfConfig":"24"},{"size":254,"mtime":1690851990193,"results":"40","hashOfConfig":"24"},{"size":9008,"mtime":1691258123840,"results":"41","hashOfConfig":"24"},{"size":902,"mtime":1690652846174,"results":"42","hashOfConfig":"24"},{"size":10412,"mtime":1691261303717,"results":"43","hashOfConfig":"24"},{"size":3751,"mtime":1691258287005,"results":"44","hashOfConfig":"24"},{"size":13889,"mtime":1690856369004,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"2lf18s",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jake/rem-stack/chess/client/src/index.tsx",[],[],[],"/home/jake/rem-stack/chess/client/src/reportWebVitals.ts",[],[],"/home/jake/rem-stack/chess/client/src/App.tsx",[],[],"/home/jake/rem-stack/chess/client/src/api/express-api.ts",[],[],"/home/jake/rem-stack/chess/client/src/pages/HomePage.tsx",[],[],"/home/jake/rem-stack/chess/client/src/pages/LogInPage.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/LogInForm.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/MainLayout.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/MainHeader.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/FormFields.tsx",[],[],"/home/jake/rem-stack/chess/client/src/pages/UserDashboardPage.tsx",["117","118"],[],"import { FC, useEffect, useState } from \"react\";\nimport MainLayout from \"../components/MainLayout\";\nimport ExpressAPI from \"../api/express-api\";\nimport { StartGamePortal } from \"../components/StartGamePortal\";\n\ninterface DashboardPageProps {\n  expressApi: ExpressAPI\n}\n\nexport const DashboardPage: FC<DashboardPageProps> = ({ expressApi }) => {\n\n  return (\n    <MainLayout>\n      <header>\n        <h1>\n          DASHBOARD\n        </h1>\n      </header>\n      <StartGamePortal expressApi={expressApi} />\n    </MainLayout>\n  );\n}","/home/jake/rem-stack/chess/client/src/components/RegisterForm.tsx",[],[],"/home/jake/rem-stack/chess/client/src/pages/RegisterPage.tsx",[],[],"/home/jake/rem-stack/chess/client/src/context/AuthContext.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/ProtectedRoute.tsx",[],[],"/home/jake/rem-stack/chess/client/src/components/StartGamePortal.tsx",["119"],[],"/home/jake/rem-stack/chess/client/src/pages/ActiveGamePage.tsx",[],[],[],"/home/jake/rem-stack/chess/client/src/components/ActiveGame.tsx",["120"],["121"],"/home/jake/rem-stack/chess/client/src/pages/NewUserRedirectVerifyEmail.tsx",[],[],"/home/jake/rem-stack/chess/client/src/utils/game-utils.ts",[],[],"/home/jake/rem-stack/chess/client/src/context/GameContext.tsx",["122"],[],"import { createContext, useState, ReactNode, useEffect, useContext, useCallback } from 'react';\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport { Player, assignBlackPieces, assignWhitePieces } from '../utils/game-utils';\nimport { Piece, grid } from '../utils/game-utils';\nimport { JsonObject } from 'react-use-websocket/dist/lib/types';\nimport { AuthContext } from './AuthContext';\n\nexport interface StartGameMessageObject extends JsonObject {\n  type: string;\n  accepted?: boolean;\n  challenger: string;\n  opponent: string;\n  gameId?: string;\n}\n\nexport interface GameState {\n  board: {\n    [key: string]: [Piece | null, number];\n  };\n  isWhiteTurn: boolean;\n}\n\ntype GameContextType = {\n  challenger: Player | undefined;\n  opponent: Player | undefined;\n  gameId: string;\n  gameState: GameState | undefined;\n  setGameId: React.Dispatch<React.SetStateAction<string>>;\n  setChallenger: React.Dispatch<React.SetStateAction<Player | undefined>>;\n  setOpponent: React.Dispatch<React.SetStateAction<Player | undefined>>;\n  setGameState: React.Dispatch<React.SetStateAction<GameState>>;\n  sendMessage: (message: string) => void;\n  lastMessage: MessageEvent<any> | null;\n  readyState: ReadyState;\n  initiatePlayers: (challengerUsername: string, opponentUsername: string) => Player[];\n};\n\nexport const GameContext = createContext<GameContextType>({\n  challenger: undefined,\n  opponent: undefined,\n  gameId: '',\n  gameState: undefined,\n  setGameId: () => { },\n  setChallenger: () => { },\n  setOpponent: () => { },\n  setGameState: () => { },\n  sendMessage: () => {},  // default function\n  lastMessage: null,\n  readyState: ReadyState.UNINSTANTIATED,\n  initiatePlayers: () => [],\n});\n\ntype GameProviderProps = {\n  children: ReactNode;\n};\n\nconst produceInitialGameState = () => {\n  let cordCount = 0;\n  const newGameState: GameState = {board: {}, isWhiteTurn: true};\n  for (const col of grid) {\n    for (const cord of col) {\n      newGameState.board[cord] = [null, cordCount];\n    }\n    cordCount += 1;\n  }\n  return newGameState;\n}\n\nexport const GameProvider: React.FC<GameProviderProps> = ({ children }) => {\n  const initialState: GameState = produceInitialGameState();\n\n  const [challenger, setChallenger] = useState<Player | undefined>(undefined);\n  const [opponent, setOpponent] = useState<Player | undefined>(undefined);\n  const [gameId, setGameId] = useState<string>('');\n  const [gameState, setGameState] = useState<GameState>(initialState);\n  const { isLoggedIn } = useContext(AuthContext)\n  const [socketUrl, setSocketUrl] = useState<string>('');\n\n  const initiatePlayers = (challengerUsername: string, opponentUsername: string): Player[] =>  {\n    let player1 = new Player(challengerUsername, '', [], []);\n    let player2 = new Player(opponentUsername, '', [], []);\n    const r = Math.floor(Math.random() * 2);\n    if (r === 0) {\n      player1.color = 'white';\n      player2.color = 'black';\n      assignWhitePieces(player1);\n      assignBlackPieces(player2);\n    } else {\n      player1.color = 'black';\n      player2.color = 'white';\n      assignWhitePieces(player2);\n      assignBlackPieces(player1);\n    }\n    return [player1, player2];\n  }\n  \n  useEffect(() => {\n    if (isLoggedIn) {\n      setSocketUrl('ws://localhost:3001');\n    }\n  }, [isLoggedIn]);\n\n  const {\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useWebSocket<StartGameMessageObject>(socketUrl, {\n    onOpen: () => console.log('opened'),\n    shouldReconnect: (closeEvent) => true,\n  }, socketUrl !== '');\n\n  return (\n    <GameContext.Provider value={{ challenger, opponent, gameId, gameState, setGameId, setChallenger, setOpponent, setGameState, sendMessage, lastMessage, readyState, initiatePlayers }}>\n      {children}\n    </GameContext.Provider>\n  );\n};",[],"/home/jake/rem-stack/chess/client/src/utils/svg-icons.tsx",[],[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":14,"nodeType":"125","messageId":"126","endLine":1,"endColumn":23},{"ruleId":"123","severity":1,"message":"127","line":1,"column":25,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"128","line":1,"column":14,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"129","line":231,"column":12,"nodeType":"125","messageId":"126","endLine":231,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":36,"column":6,"nodeType":"132","endLine":36,"endColumn":28,"suggestions":"133","suppressions":"134"},{"ruleId":"123","severity":1,"message":"128","line":1,"column":69,"nodeType":"125","messageId":"126","endLine":1,"endColumn":80},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useCallback' is defined but never used.","'isDragging' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'gameState' and 'setGameState'. Either include them or remove the dependency array.","ArrayExpression",["135"],["136"],{"desc":"137","fix":"138"},{"kind":"139","justification":"140"},"Update the dependencies array to be: [challenger, gameState, opponent, setGameState]",{"range":"141","text":"142"},"directive","",[1344,1366],"[challenger, gameState, opponent, setGameState]"]